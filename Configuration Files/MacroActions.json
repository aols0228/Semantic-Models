{
  "Actions": [
    {
      "Id": 1,
      "Name": "Favoritmakroer\\1.0.0",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: \nBeskrivelse: Makro, der viser det aktuelle udgivelsesnummer\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// MacroActions\n\n/*\nin c# I am not allowed to use only one\nI know I can use \\\nbut can I put r in front like in python?\n\n\nChatGPT\nIn C#, if you want to use backslashes in strings without escaping each one with another backslash (\\\\), you have a couple of options:\n\nVerbatim String Literal (@): Similar to Python's raw strings, you can prefix your string literal with @. This tells C# to interpret the string literally, ignoring escape sequences:\n\ncsharp\nKopier kode\nstring path = @\"C:\\Users\\Username\\Documents\";\nIn this example, @\"C:\\Users\\Username\\Documents\" will be treated as \"C:\\Users\\Username\\Documents\" without needing to escape the backslashes.\n\nUsing Forward Slash (/): In file paths or other contexts where backslashes are commonly used, you can often use forward slashes (/) instead. C# and most modern Windows APIs accept forward slashes in paths as well:\n\ncsharp\nKopier kode\nstring path = \"C:/Users/Username/Documents\";\nThis approach works because C# and the underlying APIs can handle paths with forward slashes on Windows.\n\nHowever, if you absolutely need to use backslashes and prefer not to use verbatim string literals or forward slashes, you would need to escape each backslash with another backslash (\\\\). There's no direct equivalent to Python's r prefix for raw strings in C#.\n*/",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 2,
      "Name": "Favoritmakroer\\---------Vis---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: LinjeShiftsmakro\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Table, Column"
    },
    {
      "Id": 3,
      "Name": "Favoritmakroer\\Tæl antal rækker",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der tæller antallet af rækker i den tabel du har højreklikket på\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Byg og valider model\\Tæl antal rækker\");",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 4,
      "Name": "Favoritmakroer\\Vis unikke værdier",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der værdierne i den kolonne du har højreklikket på\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Byg og valider model\\Vis unikke værdier\");",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 5,
      "Name": "Favoritmakroer\\---------Change---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (Replace denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 6,
      "Name": "Favoritmakroer\\Change catalog.schema",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Create model\\Change catalog.schema\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 7,
      "Name": "Favoritmakroer\\Change catalog",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Create model\\Change catalog\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 8,
      "Name": "Favoritmakroer\\Change schema",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Create model\\Change schema\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 9,
      "Name": "Favoritmakroer\\---------Shift---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 10,
      "Name": "Favoritmakroer\\Shift catalog to development",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der Shifter to developmentscatalog\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    03-10-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Catalog\\Shift to development\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 11,
      "Name": "Favoritmakroer\\Shift catalog to production",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der Shifter to developmentscatalog\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    03-10-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Catalog\\Shift to production\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 12,
      "Name": "Favoritmakroer\\Shift cluster to development formål 1 (standard)",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 13,
      "Name": "Favoritmakroer\\Shift cluster to development formål 2",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 14,
      "Name": "Favoritmakroer\\Shift cluster to development formål 3",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 15,
      "Name": "Favoritmakroer\\Shift cluster to undervisning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 16,
      "Name": "Favoritmakroer\\---------Create, Remove, klargør---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Column, Expression"
    },
    {
      "Id": 17,
      "Name": "Favoritmakroer\\Create SUM kerneberegning på valgt kolonne",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører en biblioteksmakroer.\n    1. Createter SUM beregning på valgt kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    10-07-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Byg og valider model\\Create SUM kerneberegning\");",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 18,
      "Name": "Favoritmakroer\\Create tabelgrupper",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der udfører tre biblioteksmakroer.\n    1. Remove prefixes fra tabelnavne\n    2. Indsætter tabellerne i mapper, der kaldes tabelgrupper\n    3. Nulstoler alle partitioner og indsætter schema\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Create model\\Create tabelgrupper ud fra prefixes\");",
      "Tooltip": "",
      "ValidContexts": "Model, Table"
    },
    {
      "Id": 19,
      "Name": "Favoritmakroer\\Remove tabelgrupper",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der Remove eksisterende tabelgrupper.\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Byg og valider model\\Remove tabelgrupper\");",
      "Tooltip": "",
      "ValidContexts": "Model, Table"
    },
    {
      "Id": 20,
      "Name": "Favoritmakroer\\Klargør alle M-partitioner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der indsætter shared expressions i M-partition expressions og derved klargør dem.\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Create model\\Klargør alle M-partitioner\");",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition, Expression"
    },
    {
      "Id": 21,
      "Name": "Create model\\---------Vis---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition, Expression"
    },
    {
      "Id": 22,
      "Name": "Create model\\Vis alle partitioner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der slår alle partitioner op og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    24-10-2024        aols0228    Frigivelse af makro\n*/\n\n// This script iterates through all tables in the model and outputs each table's name and its partitions, including their expressions, in a single Info() call.\n\nMacro(@\"Systemforvaltning\\Partition\\Vis alle\");",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition, Expression"
    },
    {
      "Id": 23,
      "Name": "Create model\\Vis alle shared expressions",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der slår alle shared expressions op og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    02-10-2024        aols0228    Frigivelse af makro\n*/\n\n// This script iterates through all shared expressions in the model and outputs their names and corresponding expressions in a single Info() call.\n\nMacro(@\"Systemforvaltning\\Shared Expression\\Vis alle\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 24,
      "Name": "Create model\\---------Change---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 25,
      "Name": "Create model\\Change catalog.schema",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Changeler schema-parametret\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        string userInput = Prompt.ShowDialog(\"Enter Value\", \"Input Box\");\n\n        if (userInput != null)\n        {\n            MessageBox.Show($\"You entered: {userInput}\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n        else\n        {\n            MessageBox.Show(\"Operation canceled.\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n    }\n}\n\npublic class Prompt\n{\n    public static string ShowDialog(string text, string caption)\n    {\n        // Create the form\n        Form prompt = new Form();\n        prompt.Width = 500;\n        prompt.Height = 220; // Set the height to ensure visibility\n        prompt.Text = caption;\n        prompt.FormBorderStyle = FormBorderStyle.FixedDialog;\n        prompt.StartPosition = FormStartPosition.CenterScreen; // Center on screen initially\n        prompt.MinimizeBox = false;\n        prompt.MaximizeBox = false;\n        prompt.TopMost = true; // Ensure the form stays on top\n\n        // Bring the form to front and activate it\n        prompt.Shown += (sender, e) =>\n        {\n            prompt.BringToFront();\n            prompt.Activate();\n        };\n\n        // Create a label\n        Label textLabel = new Label()\n        {\n            Left = 50,\n            Top = 20,\n            Width = 400,\n            Text = text\n        };\n\n        // Create a text box\n        TextBox textBox = new TextBox()\n        {\n            Left = 50,\n            Top = 50,\n            Width = 400,\n            Height = 30 // Set height for better visibility\n        };\n\n        // Create the OK button\n        Button confirmation = new Button()\n        {\n            Text = \"OK\",\n            Left = 230,  // Positioned before \"Annuller\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Create the \"Annuller\" button\n        Button cancelation = new Button()\n        {\n            Text = \"Annuller\",\n            Left = 350, // Positioned after \"OK\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Button click events\n        confirmation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.OK;\n            prompt.Close();\n        };\n\n        cancelation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.Cancel;\n            prompt.Close();\n        };\n\n        // Add controls to the form\n        prompt.Controls.Add(textBox);\n        prompt.Controls.Add(confirmation);\n        prompt.Controls.Add(cancelation);\n        prompt.Controls.Add(textLabel);\n\n        // Set the default button\n        prompt.AcceptButton = confirmation;\n\n        // Show the dialog and return the result\n        return prompt.ShowDialog() == DialogResult.OK ? textBox.Text : null;\n    }\n}\n\n// Initialize the list with the expression names\nvar expressionNames = new List<string> { \"Catalog\", \"Schema\" };\n\nstring userInput = Prompt.ShowDialog($\"Kopier navn fra databricks {expressionNames[0].ToLower()}.{expressionNames[1].ToLower()}\", \"Input Box\");\n\nif (userInput != null)\n{\n    // Split the user input into catalog and schema parts\n    string[] parts = userInput.ToLower().Split('.');\n\n    if (parts.Length == 2)\n    {\n        // Create a list of corresponding values from the user input\n        var inputValues = new List<string> { parts[0], parts[1] };\n\n        // Iterate over the list to update or add expressions\n        for (int i = 0; i < expressionNames.Count; i++)\n        {\n            string expressionName = expressionNames[i];\n            string expressionText = CreateExpressionText(inputValues[i]);\n\n            try\n            {\n                // Try to update the expression\n                Model.Expressions[expressionName].Expression = expressionText;\n            }\n            catch (KeyNotFoundException)\n            {\n                // If the expression does not exist, add it\n                Model.AddExpression(expressionName, expressionText);\n            }\n        }\n    }\n    else\n    {\n        // Handle the case where the input does not contain exactly one dot (.)\n        MessageBox.Show($\"Input should be in the format '{expressionNames[0].ToLower()}.{expressionNames[1].ToLower()}'.\", \"Input Error\", MessageBoxButtons.OK, MessageBoxIcon.Error);\n    }\n}\nelse\n{\n    // User canceled the operation.\n}\n\n// Method to create expression text\nstring CreateExpressionText(string input) =>\n    @\"\"\"\" + input + @\"\"\" \nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n",
      "Tooltip": "Kopier fra databricks catalog.schema side",
      "ValidContexts": "Expression"
    },
    {
      "Id": 26,
      "Name": "Create model\\Change catalog",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Changeler schema-parametret\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        string userInput = Prompt.ShowDialog(\"Enter Value\", \"Input Box\");\n\n        if (userInput != null)\n        {\n            MessageBox.Show($\"You entered: {userInput}\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n        else\n        {\n            MessageBox.Show(\"Operation canceled.\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n    }\n}\n\npublic class Prompt\n{\n    public static string ShowDialog(string text, string caption)\n    {\n        // Create the form\n        Form prompt = new Form();\n        prompt.Width = 500;\n        prompt.Height = 220; // Set the height to ensure visibility\n        prompt.Text = caption;\n        prompt.FormBorderStyle = FormBorderStyle.FixedDialog;\n        prompt.StartPosition = FormStartPosition.CenterScreen; // Center on screen initially\n        prompt.MinimizeBox = false;\n        prompt.MaximizeBox = false;\n        prompt.TopMost = true; // Ensure the form stays on top\n\n        // Bring the form to front and activate it\n        prompt.Shown += (sender, e) =>\n        {\n            prompt.BringToFront();\n            prompt.Activate();\n        };\n\n        // Create a label\n        Label textLabel = new Label()\n        {\n            Left = 50,\n            Top = 20,\n            Width = 400,\n            Text = text\n        };\n\n        // Create a text box\n        TextBox textBox = new TextBox()\n        {\n            Left = 50,\n            Top = 50,\n            Width = 400,\n            Height = 30 // Set height for better visibility\n        };\n\n        // Create the OK button\n        Button confirmation = new Button()\n        {\n            Text = \"OK\",\n            Left = 230,  // Positioned before \"Annuller\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Create the \"Annuller\" button\n        Button cancelation = new Button()\n        {\n            Text = \"Annuller\",\n            Left = 350, // Positioned after \"OK\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Button click events\n        confirmation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.OK;\n            prompt.Close();\n        };\n\n        cancelation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.Cancel;\n            prompt.Close();\n        };\n\n        // Add controls to the form\n        prompt.Controls.Add(textBox);\n        prompt.Controls.Add(confirmation);\n        prompt.Controls.Add(cancelation);\n        prompt.Controls.Add(textLabel);\n\n        // Set the default button\n        prompt.AcceptButton = confirmation;\n\n        // Show the dialog and return the result\n        return prompt.ShowDialog() == DialogResult.OK ? textBox.Text : null;\n    }\n}\n\nstring expressionName = \"Catalog\"; // This is the variable for the expression name\n\nstring userInput = Prompt.ShowDialog(\"Indtast navn på \" + expressionName.ToLower(), \"Input Box\");\n\nif (userInput != null)\n{\n\n\n//string userInput = \"yourUserInput\"; // Replace with the following with actual user input\n\n// Define the common expression text\nstring expressionText = \n@\"\"\"\" + userInput.ToLower() + @\"\"\" \nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n\ntry\n{\n    // Use userInput here...\n    Model.Expressions[expressionName].Expression = expressionText; //denne del overskriver værdien i det eksisterende Schema-parameter\n}\ncatch (Exception)\n{\n    Model.AddExpression(expressionName, expressionText); //denne del Createter et nyt Schema-parameter, hvis det ikke findes\n}\n}\n\n\nelse\n{\n    // User canceled the operation.\n}",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 27,
      "Name": "Create model\\Change schema",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Changeler schema-parametret\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        string userInput = Prompt.ShowDialog(\"Enter Value\", \"Input Box\");\n\n        if (userInput != null)\n        {\n            MessageBox.Show($\"You entered: {userInput}\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n        else\n        {\n            MessageBox.Show(\"Operation canceled.\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n    }\n}\n\npublic class Prompt\n{\n    public static string ShowDialog(string text, string caption)\n    {\n        // Create the form\n        Form prompt = new Form();\n        prompt.Width = 500;\n        prompt.Height = 220; // Set the height to ensure visibility\n        prompt.Text = caption;\n        prompt.FormBorderStyle = FormBorderStyle.FixedDialog;\n        prompt.StartPosition = FormStartPosition.CenterScreen; // Center on screen initially\n        prompt.MinimizeBox = false;\n        prompt.MaximizeBox = false;\n        prompt.TopMost = true; // Ensure the form stays on top\n\n        // Bring the form to front and activate it\n        prompt.Shown += (sender, e) =>\n        {\n            prompt.BringToFront();\n            prompt.Activate();\n        };\n\n        // Create a label\n        Label textLabel = new Label()\n        {\n            Left = 50,\n            Top = 20,\n            Width = 400,\n            Text = text\n        };\n\n        // Create a text box\n        TextBox textBox = new TextBox()\n        {\n            Left = 50,\n            Top = 50,\n            Width = 400,\n            Height = 30 // Set height for better visibility\n        };\n\n        // Create the OK button\n        Button confirmation = new Button()\n        {\n            Text = \"OK\",\n            Left = 230,  // Positioned before \"Annuller\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Create the \"Annuller\" button\n        Button cancelation = new Button()\n        {\n            Text = \"Annuller\",\n            Left = 350, // Positioned after \"OK\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Button click events\n        confirmation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.OK;\n            prompt.Close();\n        };\n\n        cancelation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.Cancel;\n            prompt.Close();\n        };\n\n        // Add controls to the form\n        prompt.Controls.Add(textBox);\n        prompt.Controls.Add(confirmation);\n        prompt.Controls.Add(cancelation);\n        prompt.Controls.Add(textLabel);\n\n        // Set the default button\n        prompt.AcceptButton = confirmation;\n\n        // Show the dialog and return the result\n        return prompt.ShowDialog() == DialogResult.OK ? textBox.Text : null;\n    }\n}\n\nstring expressionName = \"Schema\"; // This is the variable for the expression name\n\nstring userInput = Prompt.ShowDialog(\"Indtast navn på \" + expressionName.ToLower(), \"Input Box\");\n\nif (userInput != null)\n{\n\n\n//string userInput = \"yourUserInput\"; // Replace with the following with actual user input\n\n// Define the common expression text\nstring expressionText = \n@\"\"\"\" + userInput.ToLower() + @\"\"\" \nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n\ntry\n{\n    // Use userInput here...\n    Model.Expressions[expressionName].Expression = expressionText; //denne del overskriver værdien i det eksisterende Schema-parameter\n}\ncatch (Exception)\n{\n    Model.AddExpression(expressionName, expressionText); //denne del Createter et nyt Schema-parameter, hvis det ikke findes\n}\n}\n\n\nelse\n{\n    // User canceled the operation.\n}",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 28,
      "Name": "Create model\\---------Shift---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 29,
      "Name": "Create model\\Shift catalog to development",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der ændrer Catalog to development og toføjer _sandbox\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    03-10-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Catalog\\Shift to development\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 30,
      "Name": "Create model\\Shift cluster to formål 1 development (standard)",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Shifter to developmentscluster fm1\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 31,
      "Name": "Create model\\Shift cluster to formål 2 development",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Shifter to developmentscluster fm2\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 32,
      "Name": "Create model\\Shift cluster to formål 3 development",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Shifter to developmentscluster fm3\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 33,
      "Name": "Create model\\Shift cluster to undervisning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Shifter to undervisningscluster\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Server\\production\");\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 34,
      "Name": "Create model\\UdShift shared expressions i alle M-partitioner med strings",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der udShifter parametre i alle partitioner af M-typen med tekstvariable fra sandbox-miljøet\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n\nstring komma = \", \";\nstring slash = \"\\\"\";\nstring NameParameter = \"Name=\";\nstring ServerParameter = \"Server\";\nstring ClusterParameter = \"Cluster\";\nstring CatalogParameter = NameParameter + \"Catalog\";\n\nstring ServerString = slash + \"adb-\" + slash;\n//string ClusterString = slash + \"sql/\" + slash; // : medium-sized Power BI-tjenesten cluster\nstring ClusterString = slash + \"sql/\" + slash; // fso: small-sized Power BI-tjenesten cluster\nstring CatalogString = NameParameter + slash + \"fso\" + slash;\n\n\nforeach(var artifact in Model.AllPartitions.OfType < MPartition > ())\n{\n    // Create the strings to be replaced and their replacements\n    string _ServerClusterParameter = ServerParameter + komma + ClusterParameter;\n    string _ServerClusterString = ServerString + komma + ClusterString;\n    string _CatalogParameter = CatalogParameter;\n    string _CatalogString = CatalogString;\n\n    // Perform the replacement\n    artifact.Expression = artifact.Expression.Replace(_ServerClusterParameter, _ServerClusterString);\n    artifact.Expression = artifact.Expression.Replace(_CatalogParameter, _CatalogString);\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 35,
      "Name": "Create model\\---------Create, Remove, klargør---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition, Expression"
    },
    {
      "Id": 36,
      "Name": "Create model\\Create tabelgrupper ud fra prefixes",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nBeskrivelse: Makro, der Createter tabelgrupper ud fra prefixes\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter  | Beskrivelse\n1.0  | 20-09-2024      | aols0228   | Frigivelse af makro\n1.1  | 10-10-2024      | aols0228   | Gjort at makro ikke Remove alle _ understregninger\n*/\n\nforeach (var table in Model.Tables)\n{\n    // Check if the table is a CalculationGroupTable\n    if (table is CalculationGroupTable)\n    {\n        table.TableGroup = \"Beregningsgruppe\";\n    }\n    // Check if the table is hidden\n    else if (table.IsHidden)\n    {\n        table.TableGroup = \"Støttetabeller\";\n    }\n    // In other tables check for underscore, and if exists insert the prefix as table group and remove prefix\n    else\n    {\n        // Find the index of the first underscore\n        int underscoreIndex = table.Name.IndexOf('_');\n\n        // Proceed only if an underscore is found\n        if (underscoreIndex > -1)\n        {\n            // Extract and capitalize the part before the first underscore (table group)\n            string tableGroup = char.ToUpper(table.Name[0]) + table.Name.Substring(1, underscoreIndex - 1).ToLower();\n\n            // Extract the part after the first underscore and capitalize the first letter\n            // Does not remove any additional underscores that may exist in the table name\n            string newTableName = table.Name.Substring(underscoreIndex + 1).Trim();\n            if (newTableName.Length > 0)\n                newTableName = char.ToUpper(newTableName[0]) + newTableName.Substring(1);\n\n            // Update table name and set table group\n            table.Name = newTableName;\n            table.TableGroup = tableGroup;\n        }\n    }\n}\n",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 37,
      "Name": "Create model\\Create tabelgrupper ud fra relationer",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-table-groups.html\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Loop through all tables:\nforeach (var table in Model.Tables)\n{\n    if (table is CalculationGroupTable)\n    {\n        table.TableGroup = \"Beregningsgruppe\";\n    }\n    // Check if table contains visible measures, but no relationships to other tables\n    else if (!table.UsedInRelationships.Any() && table.Measures.Any(m => m.IsVisible))\n    {\n        // table.TableGroup = \"Beregninger\"; \n        // Jeg har taget den ud, da det virker dobbeltkonfekt at have Beregningstabel i en gruppe\n    }\n    // Check if table is exclusively on the \"many\" side of relationships:\n    else if (table.UsedInRelationships.All(r => r.FromTable == table) && table.UsedInRelationships.Any())\n    {\n        table.TableGroup = \"Fact\";\n    }\n    // Check if table is without any relationships, that are Calculated Tables and do not have measures:\n    else if (!table.UsedInRelationships.Any() && table is CalculatedTable && !table.Measures.Any())\n    {\n        table.TableGroup = \"Parameter\";\n    }\n    // Check if table is on the \"one\" side of relationship:\n    else if (table.UsedInRelationships.Any(r => r.ToTable == table))\n    {\n        table.TableGroup = \"Dim\";\n    }\n    // Check if the table is hidden\n    else if (table.IsHidden)\n    {\n        // Assign the table to the \"Støttetabeller\" group without altering its name\n        table.TableGroup = \"Støttetabeller\";\n    }\n    else\n    {\n        // All other tables:\n        table.TableGroup = \"Eventuelt\";\n    }\n}\n",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 38,
      "Name": "Create model\\Create tabel to beregninger",
      "Enabled": "true",
      "Execute": "/*\nForfatter: TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-measure-table.html\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Create a calculated table with a single column which is hidden:\nvar table = Model.AddCalculatedTable(\"Beregninger\", \"{0}\");\ntable.Columns[0].IsHidden = true;",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 39,
      "Name": "Create model\\Create tabel to feltparametre",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Daniel Otykier\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-field-parameter.html\nBeskrivelse: Makro, der Createter en fieldparametertabel\n    Before running the script, select the measures or columns that you would like to use as field parameters (hold down CTRL to select multiple objects).\n    Also, you may change the name of the field parameter table below.\n    NOTE: If used against Power BI-tjenesten Desktop, you must enable unsupported features under File > Preferences (TE2) or Tools > Preferences (TE3).\n\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n\nvar name = \"Parameter\";\n\nif(Selected.Columns.Count == 0 && Selected.Measures.Count == 0) throw new Exception(\"No columns or measures selected!\");\n\n// Construct the DAX for the calculated table based on the current selection:\nvar objects = Selected.Columns.Any() ? Selected.Columns.Cast<ITabularTableObject>() : Selected.Measures;\nvar dax = \"{\\n    \" + string.Join(\",\\n    \", objects.Select((c,i) => string.Format(\"(\\\"{0}\\\", NAMEOF('{1}'[{0}]), {2})\", c.Name, c.Table.Name, i))) + \"\\n}\";\n\n// Add the calculated table to the model:\nvar table = Model.AddCalculatedTable(name, dax);\n\n// In TE2 columns are not created automatically from a DAX expression, so \n// we will have to add them manually:\nvar te2 = table.Columns.Count == 0;\nvar nameColumn = te2 ? table.AddCalculatedTableColumn(name, \"[Value1]\") : table.Columns[\"Value1\"] as CalculatedTableColumn;\nvar fieldColumn = te2 ? table.AddCalculatedTableColumn(name + \" Fields\", \"[Value2]\") : table.Columns[\"Value2\"] as CalculatedTableColumn;\nvar orderColumn = te2 ? table.AddCalculatedTableColumn(name + \" Order\", \"[Value3]\") : table.Columns[\"Value3\"] as CalculatedTableColumn;\n\nif(!te2) {\n    // Rename the columns that were added automatically in TE3:\n    nameColumn.IsNameInferred = false;\n    nameColumn.Name = name;\n    fieldColumn.IsNameInferred = false;\n    fieldColumn.Name = name + \" Fields\";\n    orderColumn.IsNameInferred = false;\n    orderColumn.Name = name + \" Order\";\n}\n// Set remaining properties for field parameters to work\n// See: https://twitter.com/markbdi/status/1526558841172893696\nnameColumn.SortByColumn = orderColumn;\nnameColumn.GroupByColumns.Add(fieldColumn);\nfieldColumn.SortByColumn = orderColumn;\nfieldColumn.SetExtendedProperty(\"ParameterMetadata\", \"{\\\"version\\\":3,\\\"kind\\\":2}\", ExtendedPropertyType.Json);\nfieldColumn.IsHidden = true;\norderColumn.IsHidden = true;",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 40,
      "Name": "Create model\\Remove tabelgrupper",
      "Enabled": "true",
      "Execute": "/*\nForfatter: TE3 team\nLink to source: https://docs.tabulareditor.com/te3/features/table-groups.html\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n///Remove tabelgrupper\nforeach(var table in Model.Tables) table.TableGroup = null;",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 41,
      "Name": "Create model\\Remove tabelgrupper og indsæt dem som prefixes",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nBeskrivelse: Makro, der nulstoler alle partitioner, der har en M-partition/full load\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter  | Beskrivelse\n1.0  | 19-06-2024      | aols0228   | Frigivelse af makro\n*/\n\nforeach (var table in Model.Tables)\n{\n    // Proceed only if TableGroup is not empty or null\n    if (string.IsNullOrEmpty(table.TableGroup)) continue;\n\n    // Prepare the table group with an underscore and convert to lowercase\n    string tableGroup = table.TableGroup.ToLower() + \"_\";\n\n    // Check if the table name doesn't already start with the tableGroup prefix\n    if (table.Name.StartsWith(tableGroup, StringComparison.Ordinal)) continue;\n\n    // Create the new table name by combining tableGroup and the trimmed table name, \n    // removing spaces and converting to lowercase\n    table.Name = (tableGroup + table.Name.Trim().Replace(\" \", \"\")).ToLower();\n\n    // Clear the TableGroup field after renaming\n    table.TableGroup = null;\n}\n\n",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 42,
      "Name": "Create model\\Remove tabelgrupper og indsæt viewnavn som tabelnavn (for m-partitioner)",
      "Enabled": "true",
      "Execute": "// Opdater alle M-partitionerne\nstring targetSubstring = \"Schema{[Name=\"; // Define the target substring as a variable\nstring quote = \"\\\"\"; // Define the quote character as a variable\n\nforeach (var table in Model.Tables)\n{\n    // Check if the table has partitions\n    if (table.Partitions.Count > 0)\n    {\n        foreach (var partition in table.Partitions.OfType<MPartition>())\n        {\n            // Extract the expression and handle null\n            string expression = partition.Expression ?? string.Empty;\n\n            if (expression.Contains(targetSubstring))\n            {\n                // Extract the substring after the target and find the first quoted item\n                int startIndex = expression.IndexOf(targetSubstring) + targetSubstring.Length;\n\n                // Ensure startIndex is valid before extracting the schema name\n                if (startIndex >= targetSubstring.Length && startIndex < expression.Length)\n                {\n                    string subExpression = expression.Substring(startIndex).Trim();\n                    var match = System.Text.RegularExpressions.Regex.Match(subExpression, $\"{quote}([^\\\"']*){quote}\");\n\n                    if (match.Success && match.Groups.Count > 1)\n                    {\n                        // Extract the schema name from the match\n                        string schemaName = match.Groups[1].Value.Trim();\n\n                        // Set the table name directly to the schema name\n                        table.Name = schemaName;\n\n                        // Remove the table group (if any) after setting the name\n                        table.TableGroup = null;\n                    }\n                }\n            }\n        }\n    }\n}\n",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 43,
      "Name": "Create model\\Remove prefixes fra tabelnavne",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228, ChatGPT og ...\nLink to source: \nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nList<string> prefixesToRemove = new List<string>\n{\n    \"Dim_\",\n    \"Fact_\",\n    \"RLS_\",\n    \"Parameter_\",\n    \"Bridge_\"\n};\n\nforeach (var table in Model.Tables)\n{\n    // Skip processing if the table name is null or empty\n    if (string.IsNullOrEmpty(table.Name))\n    {\n        continue;\n    }\n\n    // Remove specified prefixes from the table name\n    foreach (var prefix in prefixesToRemove)\n    {\n        if (table.Name.StartsWith(prefix, StringComparison.OrdinalIgnoreCase))\n        {\n            // Remove the prefix while maintaining the original case of the rest of the table name\n            table.Name = table.Name.Substring(prefix.Length);\n\n            // Capitalize the first letter of the table name\n            table.Name = char.ToUpper(table.Name[0]) + table.Name.Substring(1);\n\n            break;  // Exit the inner loop once a prefix is matched\n        }\n    }\n}\n\n// Now, Model.Tables contains tables with modified names (without specified prefixes, original case preserved, first letter capitalized)\n",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 44,
      "Name": "Create model\\Klargør alle M-partitioner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der nulstoler alle partitioner, der har en M-partition/full load\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Opdater alle M-partitionerne\nforeach (var table in Model.Tables) \n{\n    foreach (var partition in table.Partitions.OfType<MPartition>())\n    {\n        // Determine the table group name and add an underscore if not empty\n        string tableGroup = table.TableGroup;\n        if (!string.IsNullOrEmpty(tableGroup))\n        {\n            tableGroup += \"_\";\n        }\n\n        // Trim whitespace from ends, remove all spaces, then convert to lower case\n        string mPartitionsNavn = \"\\\"\" + (tableGroup + partition.Name).Trim().Replace(\" \", \"\").ToLower() + \"\\\"\";\n\n        partition.Expression =\n            \"let\\n\" +\n            \"    Source = Databricks.Catalogs(Server, Cluster),\\n\" + // null),\\n\" +\n            \"    Database = Source{[Name=Catalog,Kind=\\\"Database\\\"]}[Data],\\n\" +\n            \"    Schema = Database{[Name=Schema,Kind=\\\"Schema\\\"]}[Data],\\n\" +\n            \"    Data = Schema{[Name=\" + mPartitionsNavn + \",Kind=\\\"View\\\"]}[Data]\\n\" +\n            \"in\\n\" +\n            \"    Data\";\n    }\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition"
    },
    {
      "Id": 45,
      "Name": "Create model\\Klargør valgte M-partitioner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der nulstoler alle partitioner, der har en M-partition/full load\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Opdater alle M-partitionerne\nforeach (var table in Selected.Tables) \n{\n    foreach (var partition in table.Partitions.OfType<MPartition>())\n    {\n        // Determine the table group name and add an underscore if not empty\n        string tableGroup = table.TableGroup;\n        if (!string.IsNullOrEmpty(tableGroup))\n        {\n            tableGroup += \"_\";\n        }\n\n        // Trim whitespace from ends, remove all spaces, then convert to lower case\n        string mPartitionsNavn = \"\\\"\" + (tableGroup + partition.Name).Trim().Replace(\" \", \"\").ToLower() + \"\\\"\";\n\n        partition.Expression =\n            \"let\\n\" +\n            \"    Source = Databricks.Catalogs(Server, Cluster),\\n\" + // null),\\n\" +\n            \"    Database = Source{[Name=Catalog,Kind=\\\"Database\\\"]}[Data],\\n\" +\n            \"    Schema = Database{[Name=Schema,Kind=\\\"Schema\\\"]}[Data],\\n\" +\n            \"    Data = Schema{[Name=\" + mPartitionsNavn + \",Kind=\\\"View\\\"]}[Data]\\n\" +\n            \"in\\n\" +\n            \"    Data\";\n    }\n}\n\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition"
    },
    {
      "Id": 46,
      "Name": "Create model\\Klargør valgte trinvise partitioner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228, ChatGPT og TE3 team\nLink to source: \nBeskrivelse: Makro, der nulstoler partitioner med incremental load\n    This script will automatically generate an Incremental Refresh policy for a selected table\n    It is generated based on the selected column\n    It requires input from the user with a dialogue pop-up box.\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nusing System.Drawing;\nusing System.Text.RegularExpressions;\nusing System.Windows.Forms;\n\n// Hide the 'Running Macro' spinbox\nScriptHelper.WaitFormVisible = false;\n\n\n// 1. Create en input box med en variabel\n\n        // Initialize Variables\n        Table _Table                = Model.Tables[0];\n        string _MExpression         = \"\";\n        Column _Column              = Model.AllColumns.ToList()[0];\n        string _ColumnName          = \"\";\n        DataType _ColumnDataType    = DataType.DateTime;\n        try\n       \n        {   \n            // Select a Table for which you will configure Incremental Refresh.\n            // The Refresh Policy will be enabled and configured for this table.\n            _Table = \n                Model.Tables.Where(\n                    t => \n                    \n                    // Include tables that already have a refresh policy\n                   \n                    t.EnableRefreshPolicy != false && \n\n                    // Include only 'Table' objects\n                    t.ObjectType == ObjectType.Table && \n\n                    // Exclude Calculated Tables\n                    t.Columns[0].Type != ColumnType.CalculatedTableColumn && \n\n                    // Exclude tables that have columns on the 'From' end of a Relationship\n                    t.Columns.Any(c => Model.Relationships.Any(r => r.FromColumn == c) ) && \n\n                    // Exclude tables that don't have a DateTime or Integer column\n                    (\n                        t.Columns.Any(c => c.DataType == DataType.DateTime) || \n                        t.Columns.Any(c => c.DataType == DataType.Int64)\n                    )\n                ).SelectTable(null, \"Configure Incremental Refresh on an Incremental Table:\");\n            \n            //_MExpression = _Table.Partitions[0].Expression;\n            //_MExpression.Output();\n            _Table.SourceExpression.Output();\n            _Table.PollingExpression.Output();\n            // Use the column from between the word \"and\" and the string \"< #\"RangeEnd\"\"\n\n            try \n            {\n\n            //foreach ( var artifact in Model.Tables ) {\n            string slash = \"\\\"\";\n            \n            //var _Table = Selected.Table;\n            // Initialize Variables\n            //Table _Table                = Selected.Table;\n            //string _MExpression         = \"\";\n            //Column _Column              = Model.AllColumns.ToList()[0];\n            //string _ColumnName          = \"\";\n            //DataType _ColumnDataType    = DataType.DateTime;\n\n            // Select the column to apply the Refresh Policy. \n            // The M Expression will be modified using the name of this column.\n            _Column = \n                _Table.Columns.Where(\n\n                    // Include only DateTime or Int columns\n                    c => \n                    c.DataType == DataType.DateTime || \n                    c.DataType == DataType.Int64\n\n            ).SelectColumn(null, \"Select a DateTime or DateKey(Int) Column to apply the Refresh Policy.\");\n        \n        _ColumnName = _Column.DaxObjectName;\n        _ColumnDataType = _Column.DataType;\n\n\n// Initialize variables\nstring _ParameterName = \"New Parameter\";\nstring _ParameterValue = \"ParameterValue\";\n\n// WinForms prompt to get Parameter Name / Value input\nusing (Form prompt = new Form())\n{\n    Font formFont = new Font(\"Segoe UI\", 11);\n\n    // Prompt config\n    prompt.AutoSize = true;\n    prompt.MinimumSize = new Size(380, 120);\n    prompt.Text = \"Insert schema value\";\n    prompt.StartPosition = FormStartPosition.CenterScreen;\n\n    // Find: label\n    Label parameterNameLabel = new Label(); //{ Text = \"Enter Name:\" };\n    parameterNameLabel.Location = new Point(20, 20);\n    //parameterNameLabel.AutoSize = true;\n    //parameterNameLabel.Font = formFont;\n\n    //// Textbox for inputting the substring text\n    //TextBox parameterNameBox = new TextBox();\n    //parameterNameBox.Width = 200;\n    //parameterNameBox.Location = new Point(parameterNameLabel.Location.X + parameterNameLabel.Width + 20, parameterNameLabel.Location.Y - 4);\n    //parameterNameBox.SelectedText = \"New Parameter\";\n    //parameterNameBox.Font = formFont;\n\n    // Replace: label\n    Label parameterValueLabel = new Label() { Text = \"Enter Value:\" };\n    parameterValueLabel.Location = new Point(\n        parameterNameLabel.Location.X,\n        parameterNameLabel.Location.Y + parameterNameLabel.Height + 20\n    );\n    parameterValueLabel.AutoSize = true;\n    parameterValueLabel.Font = formFont;\n\n    // Textbox for inputting the substring text\n    TextBox parameterValueBox = new TextBox()\n    {\n        Left = parameterValueLabel.Right + 20,\n        Top = parameterValueLabel.Location.Y - 4,\n        Width = 200\n    };\n    parameterValueBox.SelectedText = \"insert schema name\";\n    parameterValueBox.Font = formFont;\n\n    // OK Button\n    Button okButton = new Button()\n    {\n        Text = \"Insert\",\n        Left = 20,\n        Width = 75,\n        Top = parameterValueBox.Location.Y + parameterValueBox.Height + 20\n    };\n    okButton.MinimumSize = new Size(75, 25);\n    okButton.AutoSize = true;\n    okButton.Font = formFont;\n\n    // Cancel Button\n    Button cancelButton = new Button()\n    {\n        Text = \"Cancel\",\n        Left = okButton.Location.X + okButton.Width + 10,\n        Top = okButton.Location.Y\n    };\n    cancelButton.MinimumSize = new Size(75, 25);\n    cancelButton.AutoSize = true;\n    cancelButton.Font = formFont;\n\n    // Button actions\n    okButton.Click += (sender, e) =>\n    { //_ParameterName = parameterNameBox.Text;\n        _ParameterValue = parameterValueBox.Text;\n        prompt.DialogResult = DialogResult.OK;\n    };\n    cancelButton.Click += (sender, e) =>\n    {\n        prompt.DialogResult = DialogResult.Cancel;\n    };\n\n    prompt.AcceptButton = okButton;\n    prompt.CancelButton = cancelButton;\n\n    prompt.Controls.Add(parameterNameLabel);\n    //prompt.Controls.Add(parameterNameBox);\n    prompt.Controls.Add(parameterValueLabel);\n    prompt.Controls.Add(parameterValueBox);\n    prompt.Controls.Add(okButton);\n    prompt.Controls.Add(cancelButton);\n\n    // The user clicked OK, so perform the find-and-replace logic\n    if (prompt.ShowDialog() == DialogResult.OK)\n    {  \n\n\n\n\n\n            string Schema = slash + _ParameterValue.ToLower() + slash;\n            //string UpdateField = \"[\" + _ColumnName + \"]\";\n            string UpdateField = _ColumnName;\n            string MPartitionsNavn = slash + _Table.Name.ToLower() + slash;\n            //bool containsKey = _ParameterValue.Contains(\"Int\") || _ParameterValue.Contains(\"Key\");\n            //bool containsKey = _ParameterValue.Contains(\"Int\") || _ParameterValue.Contains(\"Key\");\n            bool containsKey = _ColumnDataType == DataType.Int64;\n            \n\n\n            _Table.SourceExpression =\n                \"let\\n\"\n                + \"    Source = Databricks.Catalogs(Server, Cluster, null),\\n    Database = Source{[Name=Catalog,Kind=\\\"Database\\\"]}[Data],\\n    Schema = Database{[Name=\"\n                + Schema\n                + \",Kind=\\\"Schema\\\"]}[Data],\\n    Data = Schema{[Name=\"\n                + MPartitionsNavn\n                + \",Kind=\\\"View\\\"]}[Data],\\n\\n    // The filter step must be able to fold back to the data source\\n    // No steps before this should break query folding\\n    IncrementalRefreshFilterStep = \\n      Table.SelectRows(\\n          Data,\\n          each \\n              \"\n                + UpdateField\n                + (containsKey ? \" >= ConvertDatetimeToInt(#\\\"RangeStart\\\")\" : \" >= #\\\"RangeStart\\\"\")\n                + \" and \\n              \"\n                + UpdateField \n                + (containsKey ? \" < ConvertDatetimeToInt(#\\\"RangeEnd\\\")\" : \" < #\\\"RangeEnd\\\"\")\n                + \"\\n      )\\n\\n\"\n                + \"in\\n\"\n                + \"    IncrementalRefreshFilterStep\";\n\n            //_Table.EnableRefreshPolicy = true;\n\n                }\n    else\n    {\n        Error(\"Cancelled input! Ended script without changes.\");\n    }\n}\n\n\n\n            }\n            catch\n                {\n                    Error( \"No valid column selected! Ending script without changes.\" );\n                }\n                \n            }\n            catch\n            {\n                Error( \"No valid table selected! Ending script without changes.\" );\n            }    \n\n\n\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition"
    },
    {
      "Id": 47,
      "Name": "Byg og valider model\\---------Vis---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Measure, Expression"
    },
    {
      "Id": 48,
      "Name": "Byg og valider model\\Tæl antal modelobjekter",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Kurt Buhler\nLink to source: https://gist.github.com/data-goblin/a062a220f50722f3e753436561536edf\nBeskrivelse: Makro, der tæller alle modelobjekter og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    02-10-2024        aols0228    Frigivelse af makro\n*/\n\n// Count calculation groups & calculation items\nint _calcgroups = 0;\nint _calcitems = 0;\nforeach (  var _calcgroup  in Model.CalculationGroups )\n{\n    _calcgroups = _calcgroups + 1;\n    foreach (  var _item  in _calcgroup.CalculationItems )\n    {\n        _calcitems = _calcitems + 1;\n    }\n}\n\n// Count partitions and DAX parameters\nint _partitions = 0;\nint _whatifparameters = 0;\nint _fieldparameters = 0;\nforeach (  var _table  in Model.Tables )\n{\n    foreach (  var _partition  in _table.Partitions )\n    {\n        string _type = Convert.ToString(_partition.SourceType);\n        string _exp = Convert.ToString(_partition.Expression);\n        if ( _type == \"M\" )\n        {\n            _partitions = _partitions + 1;\n        }\n        else if ( _type == \"Calculated\" && _exp.Contains(\"NAMEOF\") )\n        {\n            _fieldparameters = _fieldparameters + 1;\n        }\n        else if ( _type == \"Calculated\" && _exp.Contains(\"GENERATESERIES\") )\n        {\n            _whatifparameters = _whatifparameters + 1;\n        }\n            \n    }\n}\n\n// Average measure length\ndecimal _numLines = 0;\ndecimal _numChars = 0;\nint _measures = Model.AllMeasures.Count();\nforeach ( var _measure in Model.AllMeasures )\n{\n    _numLines = _numLines + _measure.Expression.Split(\"\\n\").Length;\n    _numChars = _numChars + _measure.Expression.Length;\n}\n_numLines = Math.Round(_numLines / _measures, 1);\n_numChars = Math.Round(_numChars / _measures, 1);\n\n\n// Return the pop-up\nInfo ( \"In the model, we see the below objects:\\n\\n\"\n\n        + \"-----------------------------------------\\n\"\n        + \"Data Objects\\n\"\n        + \"-----------------------------------------\\n\"\n        + \" ├─ PQ Expressions: \" + Convert.ToString(Model.Expressions.Count()) + \"\\n\"\n        + \" │\\n\"\n        + \" └─ Tables: \" + Convert.ToString(Model.Tables.Count()) + \"\\n\"\n        + \"       ├─ Incremental Refresh Tables: \" + \n            Convert.ToString(Model.Tables.Where(\n                _ir => \n                Convert.ToString(_ir.EnableRefreshPolicy) \n                == \n                \"True\").Count()) + \"\\n\"\n                \n        + \"       │\\n\"\n        + \"       ├─ Calculated Tables: \" + \n            Convert.ToString(\n                Model.Tables.Where(\n                    _tables => \n                    Convert.ToString(_tables.Columns[0].Type) \n                    == \n                    \"CalculatedTableColumn\").Count()) + \"\\n\"\n\n        + \"       │   ├─ What if parameters: \" + \n            Convert.ToString(_whatifparameters) + \"\\n\"\n        + \"       │   └─ Field parameters: \" + \n            Convert.ToString(_fieldparameters) + \"\\n\"\n        + \"       │\\n\"\n        + \"       ├─ M Partitions: \" + \n            Convert.ToString(_partitions) + \"\\n\"\n        + \"       │\\n\"\n        + \"       └─ Total Table Columns: \" + \n            Convert.ToString(Model.AllColumns.Count()) + \"\\n\\n\"\n\n        + \"-----------------------------------------\\n\"\n        + \"DAX Objects\\n\"\n        + \"-----------------------------------------\\n\"\n        + \" ├─ Relationships: \" + \n            Convert.ToString(Model.Relationships.Count()) + \"\\n\"\n        + \" │   ├─ Bi-directional: \" + \n            Convert.ToString(Model.Relationships.Where(\n                _relationships => \n                Convert.ToString(_relationships.CrossFilteringBehavior) \n                == \n                \"BothDirections\").Count()) + \"\\n\"\n\n        + \" │   ├─ Many-to-Many: \" + \n            Convert.ToString(Model.Relationships.Where(\n                _relationships => \n                Convert.ToString(_relationships.FromCardinality) \n                == \n                \"Many\" \n                && \n                Convert.ToString(_relationships.ToCardinality) \n                == \n                \"Many\").Count()) + \"\\n\"\n\n        + \" │   ├─ One-to-One: \" + \n            Convert.ToString(Model.Relationships.Where(\n                _relationships => \n                Convert.ToString(_relationships.FromCardinality) \n                == \n                \"One\" \n                && \n                Convert.ToString(_relationships.ToCardinality) \n                == \n                \"One\").Count()) + \"\\n\"\n\n        + \" │   └─ Inactive: \" + \n            Convert.ToString(Model.Relationships.Where(\n                _relationships => \n                Convert.ToString(_relationships.IsActive) \n                == \n                \"False\").Count()) + \"\\n\"\n\n        + \" │\\n\"\n        + \" ├─ Calculation Groups: \" + \n            Convert.ToString(_calcgroups) + \"\\n\"\n        + \" │   └─ Calculation Items: \" + \n            Convert.ToString(_calcitems) + \"\\n\" \n        + \" │\\n\"\n        + \" ├─ Calculated Columns: \" + \n            Convert.ToString(Model.AllColumns.Where(\n                _columns => \n                Convert.ToString(_columns.Type) \n                == \n                \"Calculated\").Count()) + \"\\n\"\n\n        + \" │\\n\"\n        + \" └─ Measures: \" + \n            Convert.ToString(_measures) + \"\\n\" \n        + \"     └─ Avg. Lines of DAX: \" + \n            Convert.ToString(_numLines) + \" Lines \\n\" \n        + \"     └─ Avg. Chars of DAX: \" + \n            Convert.ToString(_numChars) + \" Characters \\n\\n\" \n       \n        + \"-----------------------------------------\\n\"\n        + \"Other Objects\\n\"\n        + \"-----------------------------------------\\n\"\n        + \" ├─ Data Security Roles: \" + \n            Convert.ToString(Model.Roles.Count()) + \"\\n\"\n        + \" ├─ Explicit Data Sources: \" + \n            Convert.ToString(Model.DataSources.Count()) + \"\\n\"\n        + \" ├─ Perspectives: \" + \n            Convert.ToString(Model.Perspectives.Count()) + \"\\n\"\n        + \" └─ Translations: \" + \n            Convert.ToString(Model.Cultures.Count()));",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Expression"
    },
    {
      "Id": 49,
      "Name": "Byg og valider model\\Tæl antal rækker",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228, ChatGPT og Mike Carlo\nLink to source: https://github.com/PowerBI-tips/TabularEditor-Scripts/blob/main/Basic/Create%20countrows%20measures.csx\nBeskrivelse: Makro, der tæller antallet af rækker i den tabel du har valgt\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Get table name\nstring tableName = Selected.Table.DaxObjectFullName;\n\n// Count table rows\nstring daxExpression = \"{ FORMAT( COUNTROWS (\" + tableName + \"), \\\"#,##0\\\" ) }\";\n\n// Evaluate DAX\nstring tableRows = Convert.ToString(EvaluateDax(daxExpression));\n\n// Return output in pop-up\nInfo(tableRows + \" rækker i \" + tableName + \"-tabellen\");",
      "Tooltip": "",
      "ValidContexts": "Table"
    },
    {
      "Id": 50,
      "Name": "Byg og valider model\\Vis alle shared expressions",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der slår alle shared expressions op og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    02-10-2024        aols0228    Frigivelse af makro\n*/\n\n// This script iterates through all shared expressions in the model and outputs their names and corresponding expressions in a single Info() call.\n\nMacro(@\"Systemforvaltning\\Shared Expression\\Vis alle\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 51,
      "Name": "Byg og valider model\\Vis flowcharts over alle beregninger på https://mermaid.live",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Kurt Buhler\nLink to source: https://gist.github.com/data-goblin/a0d5d93ecf1e6927de08084c194dcaf6\nBeskrivelse: Makro, der udtrækker forbindelser mellem målinger, så de kan blive indsat på mermaid.live\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\r\nstring dependencies = \"flowchart LR\\n%% Measure dependancy mermaid flowchart\";\r\n\r\nforeach(var _measures in Model.AllMeasures )         \r\n    {\r\n\r\n    var _upstream           = _measures.DependsOn;\r\n    var _upstream_measures  = _upstream.Measures.OfType<Measure>().Select(c => c).Distinct();\r\n\r\n    dependencies += string.Format(\"\\r\\n\\n%% [{1}] Dependancies:\\n\\t{0}[\\\"{1}\\\"]\",\r\n\r\n        // 0 - Lineage tag of the measure in scope\r\n        _measures.LineageTag, \r\n\r\n        // 1 - Name of the measure in scope\r\n        _measures.Name);\r\n\r\n    foreach( var measure_dependencies in _upstream_measures )\r\n        { \r\n        dependencies += string.Format(\"\\r\\n\\t{2}[\\\"{3}\\\"] --> {0}[\\\"{1}\\\"]\",\r\n            \r\n            // 0 - Lineage tag of the measure in scope\r\n            _measures.LineageTag, \r\n            \r\n            // 1 - Name of the measure in scope\r\n            _measures.Name,\r\n            \r\n            // 2 - Lineage tag of the dependant measure\r\n            measure_dependencies.LineageTag,      \r\n            \r\n            // 3 - Name of the dependant measure\r\n            measure_dependencies.Name);\r\n        }\r\n    }\r\n\nInfo(\"1. Systemet har automatisk kopieret relationer imellem dine beregninger\\n\\n2. Åbn en browser og gå ind på https://mermaid.live\\n\\n3. Derefter indsæt fra din udklipsholder\\n\\n4. Se dine afhængigheder imellem beregninger\\n\\n5. Du skal først klikke OK førend relationerne bliver kopieret to din udklipsholder\");\nSystem.Windows.Forms.Clipboard.SetText(dependencies);\r\n//dependencies.Output();",
      "Tooltip": "visualize your measure dependencies",
      "ValidContexts": "Model, Measure"
    },
    {
      "Id": 52,
      "Name": "Byg og valider model\\Vis unikke værdier",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228, ChatGPT og Tommy Puglia\nLink to source: https://github.com/PowerBI-tips/TabularEditor-Scripts/blob/main/Basic/Extended%20Properties%20Preview/Preview%20Distinct%20Values%20of%20Selected%20Columns.csx\nBeskrivelse: Makro, der viser værdierne i den kolonne, du har valgt\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nforeach (var selectedColumn in Selected.Columns)\n{\n    string columnName = selectedColumn.Name;\n    var columnDax = selectedColumn.DaxObjectFullName;\n    string newLine = \"\\n\";\n    //string evaluateKeyword = \"EVALUATE\"; skal faktisk ikke anvendes, da den indgår i EvaluateDax-funktionen\n    var valuesExpression = \"VALUES ( \" + columnDax + \" ) \";\n    var orderExpression = \"ORDER BY ( \" + columnDax + \" ) \";\n    var result = EvaluateDax(valuesExpression + newLine + orderExpression);\n    result.Output();\n}\n\n\n/*\nDer findes også en variant fra TE3 teamet\n\nhttps://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-display-unique-column-values.html\n\n// Construct the DAX expression to get all distinct column values, from the selected column:\nvar dax = string.Format(\"ALL({0})\", Selected.Column.DaxObjectFullName);\n\n// Evaluate the DAX expression against the connected model:\nvar result = EvaluateDax(dax);\n\n// Output the DataTable containing the result of the DAX expression:\nOutput(result);\n*/",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 53,
      "Name": "Byg og valider model\\---------Change---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Measure, Column, Relationship, Expression"
    },
    {
      "Id": 54,
      "Name": "Byg og valider model\\Change beskrivelse",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: MakroModel.Tables[\"Patientkontakt\"].Columns[\"BillingAccountKey\"].IsHidden = false;\r\n, der Changeler schema-parametret\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        string userInput = Prompt.ShowDialog(\"Enter Value\", \"Input Box\");\n\n        if (userInput != null)\n        {\n            MessageBox.Show($\"You entered: {userInput}\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n        else\n        {\n            MessageBox.Show(\"Operation canceled.\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n    }\n}\n\npublic class Prompt\n{\n    public static string ShowDialog(string text, string caption)\n    {\n        // Create the form\n        Form prompt = new Form();\n        prompt.Width = 500;\n        prompt.Height = 220; // Set the height to ensure visibility\n        prompt.Text = caption;\n        prompt.FormBorderStyle = FormBorderStyle.FixedDialog;\n        prompt.StartPosition = FormStartPosition.CenterScreen; // Center on screen initially\n        prompt.MinimizeBox = false;\n        prompt.MaximizeBox = false;\n        prompt.TopMost = true; // Ensure the form stays on top\n\n        // Bring the form to front and activate it\n        prompt.Shown += (sender, e) =>\n        {\n            prompt.BringToFront();\n            prompt.Activate();\n        };\n\n        // Create a label\n        Label textLabel = new Label()\n        {\n            Left = 50,\n            Top = 20,\n            Width = 400,\n            Text = text\n        };\n\n        // Create a text box\n        TextBox textBox = new TextBox()\n        {\n            Left = 50,\n            Top = 50,\n            Width = 400,\n            Height = 30 // Set height for better visibility\n        };\n\n        // Create the OK button\n        Button confirmation = new Button()\n        {\n            Text = \"OK\",\n            Left = 230,  // Positioned before \"Annuller\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Create the \"Annuller\" button\n        Button cancelation = new Button()\n        {\n            Text = \"Annuller\",\n            Left = 350, // Positioned after \"OK\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Button click events\n        confirmation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.OK;\n            prompt.Close();\n        };\n\n        cancelation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.Cancel;\n            prompt.Close();\n        };\n\n        // Add controls to the form\n        prompt.Controls.Add(textBox);\n        prompt.Controls.Add(confirmation);\n        prompt.Controls.Add(cancelation);\n        prompt.Controls.Add(textLabel);\n\n        // Set the default button\n        prompt.AcceptButton = confirmation;\n\n        // Show the dialog and return the result\n        return prompt.ShowDialog() == DialogResult.OK ? textBox.Text : null;\n    }\n}\n\n\nstring userInput = Prompt.ShowDialog(\"Indtast beskrivelse\", \"Input Box\");\n\nif (userInput != null)\n{\n    // Update the description for each selected table\n    foreach (var t in Selected.Tables)\n    {\n        t.Description = userInput;\n    }\n\n    // Update the description for each selected column\n    foreach (var c in Selected.Columns)\n    {\n        c.Description = userInput;\n    }\n\n    // Update the description for each selected measure\n    foreach (var m in Selected.Measures)\n    {\n        m.Description = userInput;\n    }\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Measure, Column, Expression"
    },
    {
      "Id": 55,
      "Name": "Byg og valider model\\Change Encoding Hint på alle Int64-kolonner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Fabric Community\nLink to source: https://community.fabric.microsoft.com/t5/Desktop/Vertipaq-Engine-VALUE-vs-HASH/m-p/690874#M333145\nhttps://learn.microsoft.com/en-us/dotnet/api/microsoft.analysisservices.tabular.column.encodinghint?view=analysisservices-dotnet\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// for all Int64 columns set EncodingHint\nforeach(var column in Model.Tables.SelectMany(t => t.Columns)) \n{\n    if(column.DataType == DataType.Int64)         \n        column.EncodingHint = EncodingHintType.Value;\n}",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 56,
      "Name": "Byg og valider model\\Deaktiver aggregering",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n\n// Hides the selected column and removes the ability to implicitly make a calculation on top\nforeach(var c in Selected.Columns)\n{\n    // Deactivate aggregation:\n    c.SummarizeBy = AggregateFunction.None;\n}",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 57,
      "Name": "Byg og valider model\\Skjul beregning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n\n// Hides the selected column and removes the ability to implicitly make a calculation on top\nforeach(var m in Selected.Measures)\n{\n    // Hide the base column and deactivate aggregation:\n    m.IsHidden = true;\n}",
      "Tooltip": "",
      "ValidContexts": "Measure"
    },
    {
      "Id": 58,
      "Name": "Byg og valider model\\Skjul kolonne og deaktiver aggregering",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n\n// Hides the selected column and removes the ability to implicitly make a calculation on top\nforeach(var c in Selected.Columns)\n{\n    // Hide the base column and deactivate aggregation:\n    c.IsHidden = true;\n    c.SummarizeBy = AggregateFunction.None;\n}",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 59,
      "Name": "Byg og valider model\\Skjul alle kolonner der slutter med 'Nøgle', 'Key', 'ID', etc. og deaktiver aggregering",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nGitHub link: https://github.com/PowerBI-tips/TabularEditor-Scripts/blob/main/Basic/Hide%20Columns%20Ending%20with%20'Key'%20in%20Selected%20Tables.csx\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// List to store suffixes\nvar suffixes = new List<string> { \"Key\", \"Id\", \"Nøgle\" };\n\n// Loop through all tables\nforeach(var t in Model.Tables)\n{\n    // Loop through each suffix in the list\n    foreach(var suffix in suffixes)\n    {\n        // Loop through all columns ending with the current suffix on the current table\n        foreach(var c in t.Columns.Where(col => col.Name.EndsWith(suffix, StringComparison.OrdinalIgnoreCase)))\n        {\n            c.IsHidden = true;\n            c.SummarizeBy = AggregateFunction.None;\n        }\n    }\n}\n",
      "Tooltip": "",
      "ValidContexts": "Model, Relationship"
    },
    {
      "Id": 60,
      "Name": "Byg og valider model\\Skjul alle nøglekolonner og deaktiver aggregering",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228, Matt Allington and ChatGPT 4o\nLink to source: https://github.com/PowerBI-tips/TabularEditor-Scripts/blob/main/Basic/Hide%20columns%20on%20the%20many%20side%20of%20a%20relationship.csx\nBeskrivelse: Makro, der skjuler primærnøgler\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n/*\n * Title: Hide columns on the many side of a relationship  \n *\n * Author: Matt Allington, https://exceleratorbi.com.au  \n *\n * it is dangerous to use columns on the many side of a relationship as it can \n * produce unexpected results, so it is a best practice to hide these columns\n * to discourage their use in reports.\n */\n\n// Hide all columns on many side of a join\n\n// Hide all columns on either side of a join and set the aggregate function to None\nforeach (var r in Model.Relationships)\n{\n    // Hide columns on the 'From' side of the relationship\n    var fromColumn = r.FromColumn.Name;\n    var fromTable = r.FromTable.Name;\n    Model.Tables[fromTable].Columns[fromColumn].IsHidden = true;\n    Model.Tables[fromTable].Columns[fromColumn].SummarizeBy = AggregateFunction.None;\n\n    // Hide columns on the 'To' side of the relationship\n    var toColumn = r.ToColumn.Name;\n    var toTable = r.ToTable.Name;\n    Model.Tables[toTable].Columns[toColumn].IsHidden = true;\n    Model.Tables[toTable].Columns[toColumn].SummarizeBy = AggregateFunction.None;\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Relationship"
    },
    {
      "Id": 61,
      "Name": "Byg og valider model\\Change shared expression Tjek",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Changeler schema-parametret\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        string userInput = Prompt.ShowDialog(\"Enter Value\", \"Input Box\");\n\n        if (userInput != null)\n        {\n            MessageBox.Show($\"You entered: {userInput}\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n        else\n        {\n            MessageBox.Show(\"Operation canceled.\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n    }\n}\n\npublic class Prompt\n{\n    public static string ShowDialog(string text, string caption)\n    {\n        // Create the form\n        Form prompt = new Form();\n        prompt.Width = 500;\n        prompt.Height = 220; // Set the height to ensure visibility\n        prompt.Text = caption;\n        prompt.FormBorderStyle = FormBorderStyle.FixedDialog;\n        prompt.StartPosition = FormStartPosition.CenterScreen; // Center on screen initially\n        prompt.MinimizeBox = false;\n        prompt.MaximizeBox = false;\n        prompt.TopMost = true; // Ensure the form stays on top\n\n        // Bring the form to front and activate it\n        prompt.Shown += (sender, e) =>\n        {\n            prompt.BringToFront();\n            prompt.Activate();\n        };\n\n        // Create a label\n        Label textLabel = new Label()\n        {\n            Left = 50,\n            Top = 20,\n            Width = 400,\n            Text = text\n        };\n\n        // Create a text box\n        TextBox textBox = new TextBox()\n        {\n            Left = 50,\n            Top = 50,\n            Width = 400,\n            Height = 30 // Set height for better visibility\n        };\n\n        // Create the OK button\n        Button confirmation = new Button()\n        {\n            Text = \"OK\",\n            Left = 230,  // Positioned before \"Annuller\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Create the \"Annuller\" button\n        Button cancelation = new Button()\n        {\n            Text = \"Annuller\",\n            Left = 350, // Positioned after \"OK\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Button click events\n        confirmation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.OK;\n            prompt.Close();\n        };\n\n        cancelation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.Cancel;\n            prompt.Close();\n        };\n\n        // Add controls to the form\n        prompt.Controls.Add(textBox);\n        prompt.Controls.Add(confirmation);\n        prompt.Controls.Add(cancelation);\n        prompt.Controls.Add(textLabel);\n\n        // Set the default button\n        prompt.AcceptButton = confirmation;\n\n        // Show the dialog and return the result\n        return prompt.ShowDialog() == DialogResult.OK ? textBox.Text : null;\n    }\n}\n\n// Get the name of the selected object and clean it up\nstring expressionName = Selected.Name;\n\n// Remove unwanted quotes and \"Expression\" from the name\nexpressionName = expressionName.Replace(\"\\\"\", \"\").Replace(\"Expression\", \"\").Trim();\n\nstring userInput = Prompt.ShowDialog(\"Change værdi for \" + expressionName, \"Input Box\");\n\nif (userInput != null)\n{\n\n    // Use userInput here...\n\nstring expressionText = \n@\"\"\"\" + userInput.ToLower() + @\"\"\" \nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n\nSelected.Expression = expressionText;\n\n}\nelse\n{\n    // User canceled the operation.\n}\n\n",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 62,
      "Name": "Byg og valider model\\Formater alle beregninger",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-format-numeric-measures.html\nBeskrivelse: Makro, der formaterer alle DAX-beregninger\n    // This script is meant to format all measures with a default formatstring\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n\nforeach (var ms in Selected.Measures) {\n\n\tif (ms.IsHidden) continue;\n\n\tif (!string.IsNullOrWhiteSpace(ms.FormatString)) continue;\n\n\tif (ms.DataType == DataType.Int64) ms.FormatString = \"#,##0\";\n\n\tif (ms.DataType == DataType.Double || ms.DataType == DataType.Decimal) {\n\t\tif (ms.Name.Contains(\"#\")\n\t\t\t|| ms.Name.IndexOf(\"QTY\", StringComparison.OrdinalIgnoreCase) >= 0) ms.FormatString = \"#,##0\";\n\t\telse ms.FormatString = \"#,##0.00\";\n\t}\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Measure"
    },
    {
      "Id": 63,
      "Name": "Byg og valider model\\Formater alle Int64 kolonner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and ChatGPT\nLink to source: \nBeskrivelse: Makro, der formaterer alle Int64 alle kolonner og beregninger med WholeNumber format og tusindtalsseparator.\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    10-07-2024        aols0228    Frigivelse af makro\n*/\n\n// Define the format string variable\nvar formatStringInt64 = \"#,##0\";\n\n// Set the format string for all columns and measures with data type Int64\nforeach (var table in Model.Tables)\n{\n    // Set format string for columns\n    foreach (var column in table.Columns)\n    {\n        if (column.DataType == DataType.Int64)\n        {\n            column.FormatString = formatStringInt64;\n        }\n    }\n\n    // Set format string for measures\n    foreach (var measure in table.Measures)\n    {\n        if (measure.DataType == DataType.Int64)\n        {\n            measure.FormatString = formatStringInt64;\n        }\n    }\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Column"
    },
    {
      "Id": 64,
      "Name": "Byg og valider model\\Formater alle Int64 beregninger",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-format-numeric-measures.html\nBeskrivelse: Makro, der formaterer alle DAX-beregninger\n    // This script is meant to format all measures with a default formatstring\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n\nforeach (var ms in Selected.Measures) {\n\n\tif (ms.IsHidden) continue;\n\n\tif (!string.IsNullOrWhiteSpace(ms.FormatString)) continue;\n\n\tif (ms.DataType == DataType.Int64) ms.FormatString = \"#,##0\";\n\n\tif (ms.DataType == DataType.Double || ms.DataType == DataType.Decimal) {\n\t\tif (ms.Name.Contains(\"#\")\n\t\t\t|| ms.Name.IndexOf(\"QTY\", StringComparison.OrdinalIgnoreCase) >= 0) ms.FormatString = \"#,##0\";\n\t\telse ms.FormatString = \"#,##0.00\";\n\t}\n}\n\n\n/*\nForfatter: Andreas Nordgaard aols0228 and ChatGPT\nLink to source: \nBeskrivelse: Makro, der formaterer alle Int64 alle kolonner og beregninger med WholeNumber format og tusindtalsseparator.\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    10-07-2024        aols0228    Frigivelse af makro\n*/\n\n// Define the format string variable\nvar formatStringInt64 = \"#,##0\";\n\n// Set the format string for all columns and measures with data type Int64\nforeach (var table in Model.Tables)\n{\n    // Set format string for columns\n    foreach (var column in table.Columns)\n    {\n        if (column.DataType == DataType.Int64)\n        {\n            column.FormatString = formatStringInt64;\n        }\n    }\n\n    // Set format string for measures\n    foreach (var measure in table.Measures)\n    {\n        if (measure.DataType == DataType.Int64)\n        {\n            measure.FormatString = formatStringInt64;\n        }\n    }\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Measure"
    },
    {
      "Id": 65,
      "Name": "Byg og valider model\\Formater alle Int64 kolonner og beregninger",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and ChatGPT\nLink to source: \nBeskrivelse: Makro, der formaterer alle Int64 alle kolonner og beregninger med WholeNumber format og tusindtalsseparator.\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    10-07-2024        aols0228    Frigivelse af makro\n*/\n\n// Define the format string variable\nvar formatStringInt64 = \"#,##0\";\n\n// Set the format string for all columns and measures with data type Int64\nforeach (var table in Model.Tables)\n{\n    // Set format string for columns\n    foreach (var column in table.Columns)\n    {\n        if (column.DataType == DataType.Int64)\n        {\n            column.FormatString = formatStringInt64;\n        }\n    }\n\n    // Set format string for measures\n    foreach (var measure in table.Measures)\n    {\n        if (measure.DataType == DataType.Int64)\n        {\n            measure.FormatString = formatStringInt64;\n        }\n    }\n}",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 66,
      "Name": "Byg og valider model\\Eksporter beskrivelser for hele modellen to excel",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Michael Kovalsky og Andreas Nordgaard\nLink to source: https://www.elegantbi.com/post/descriptions\nLink to GitHub: https://github.com/m-kovalsky/Tabular/blob/master/Descriptions/ExportDescriptions.cs\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n#r \"System.IO\"\n#r \"Microsoft.Office.Interop.Excel\"\n\nusing System.IO;\nusing System.Windows.Forms; // Required for Clipboard class\nusing Excel = Microsoft.Office.Interop.Excel;\n\nstring filePath = @\"C:\\Temp\\Beskrivelser\"; // Update this to be the desired location of the Descriptions file\nstring excelFilePath = filePath + \".xlsx\"; \nstring textFilePath = filePath + \".txt\";\nstring excelTabName = \"ModelDescriptions\";\nvar sb = new System.Text.StringBuilder();\nstring newline = Environment.NewLine;\n\nsb.Append(\"TableName\" + '\\t' + \"ObjectType\" + '\\t' + \"ObjectName\" + '\\t' + \"HiddenFlag\" + '\\t' + \"Description\" + newline);\n\nforeach (var t in Model.Tables.Where(a => a.ObjectType.ToString() != \"CalculationGroupTable\").OrderBy(a => a.Name).ToList())\n{\n    string tableName = t.Name;\n    string tableDesc = t.Description;\n    string tblhid;\n    \n    if (t.IsHidden)\n    {\n        tblhid = \"Yes\";\n    }\n    else\n    {\n        tblhid = \"No\";\n    }\n    \n    sb.Append(tableName + '\\t' + \"Table\" + '\\t' + tableName + '\\t' + tblhid + '\\t' + tableDesc + newline);\n    \n    foreach (var o in t.Columns.OrderBy(a => a.Name).ToList())\n    {\n        string objName = o.Name;\n        string objDesc = o.Description;\n        string objhid;\n    \n        if (o.IsHidden)\n        {\n            objhid = \"Yes\";\n        }\n        else\n        {\n            objhid = \"No\";\n        }\n        \n        sb.Append(tableName + '\\t' + \"Column\" + '\\t' + objName + '\\t' + objhid + '\\t' + objDesc + newline);        \n    }\n    \n    foreach (var o in t.Measures.OrderBy(a => a.Name).ToList())\n    {\n        string objName = o.Name;\n        string objDesc = o.Description;\n        string objhid;\n    \n        if (o.IsHidden)\n        {\n            objhid = \"Yes\";\n        }\n        else\n        {\n            objhid = \"No\";\n        }\n        \n        sb.Append(tableName + '\\t' + \"Measure\" + '\\t' + objName + '\\t' + objhid + '\\t' + objDesc + newline);        \n    }\n    \n    foreach (var o in t.Hierarchies.OrderBy(a => a.Name).ToList())\n    {\n        string objName = o.Name;\n        string objDesc = o.Description;\n        string objhid;\n    \n        if (o.IsHidden)\n        {\n            objhid = \"Yes\";\n        }\n        else\n        {\n            objhid = \"No\";\n        }\n        \n        sb.Append(tableName + '\\t' + \"Hierarchy\" + '\\t' + objName + '\\t' + objhid + '\\t' + objDesc + newline);        \n    }    \n}\n\nforeach (var o in Model.CalculationGroups.OrderBy(a => a.Name).ToList())\n{\n    string tableName = o.Name;\n    string tableDesc = o.Description;\n    string tblhid;\n    \n    if (o.IsHidden)\n    {\n        tblhid = \"Yes\";\n    }\n    else\n    {\n        tblhid = \"No\";\n    }\n    \n    sb.Append(tableName + '\\t' + \"Calculation Group\" + '\\t' + tableName + '\\t' + tblhid + '\\t' + tableDesc + newline);  \n    \n    foreach (var i in o.CalculationItems.ToList())\n    {        \n        string objName = i.Name;\n        string objDesc = i.Description;\n        \n        sb.Append(tableName + '\\t' + \"Calculation Item\" + '\\t' + objName + '\\t' + \"No\" + '\\t' + objDesc + newline);        \n    }\n}\n\n// Delete existing text/Excel files\ntry\n{\n    File.Delete(textFilePath);\n    File.Delete(excelFilePath);\n}\ncatch\n{\n}\n\n// Save to text file\nSaveFile(textFilePath, sb.ToString());\n\n// Save to Excel file\nvar excelApp = new Excel.Application();\nexcelApp.Visible = false;\nexcelApp.DisplayAlerts = false;\nexcelApp.Workbooks.OpenText(textFilePath, 65001, 1, Excel.XlTextParsingType.xlDelimited, Excel.XlTextQualifier.xlTextQualifierNone, false, true, false, false, false, false, false, Type.Missing, Type.Missing, Type.Missing, Type.Missing, true, Type.Missing);\n\nvar wb = excelApp.ActiveWorkbook;\nvar ws = wb.ActiveSheet as Excel.Worksheet;\nws.Name = excelTabName;\nwb.SaveAs(excelFilePath, Excel.XlFileFormat.xlWorkbookDefault, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Excel.XlSaveAsAccessMode.xlNoChange);\n\n// Close workbook and quit Excel program\nwb.Close();\nexcelApp.Quit();\nSystem.Runtime.InteropServices.Marshal.ReleaseComObject(excelApp);\n\n// Delete text file as it is no longer necessary\ntry\n{\n    File.Delete(textFilePath);\n}\ncatch\n{\n}\n\nstring findfil = \"Du finder beskrivelserne for alle tabeller, kolonner og beregninger i excelfilen:\\n\" +\n                 excelFilePath + \n                 \"\\nSystemet har gemt filstien to dokumentet, som du blot kan kopiere ind i adresselinjen i Windows Stifinder\" +\n                 \"\\nÆndr filen, gem, og kør makroen Importer beskrivelser\";\nInfo(findfil);\n// Copy the string value of excelFilePath to the clipboard\nClipboard.SetText(excelFilePath);",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 67,
      "Name": "Byg og valider model\\Importer beskrivelser for hele modellen fra excel",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Michael Kovalsky\nLink to source: https://www.elegantbi.com/post/descriptions\nLink to GitHub: https://github.com/m-kovalsky/Tabular/blob/master/Descriptions/ImportDescriptions.cs\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n#r \"System.IO\"\n#r \"Microsoft.Office.Interop.Excel\"\n\nusing System.IO;\nusing Excel = Microsoft.Office.Interop.Excel;\n\nstring filePath = @\"C:\\Temp\\Beskrivelser\"; // Update this to be the location of the Descriptions file\nstring excelFilePath = filePath + \".xlsx\"; \nstring excelTabName = \"ModelDescriptions\";\n\n// Open Excel\nvar excelApp = new Excel.Application();\nexcelApp.Visible = false;\nexcelApp.DisplayAlerts = false;\n\n// Open Workbook, Worksheet\nvar wb = excelApp.Workbooks.Open(excelFilePath); \nvar ws = wb.Worksheets[excelTabName] as Excel.Worksheet;\n\n// Count rows and columns\nExcel.Range xlRange = ws.UsedRange;\n\nint rowCount = xlRange.Rows.Count;\n\nfor (int r = 2; r <= rowCount; r++)\n{\n    string tableName = (string)(ws.Cells[r,1] as Excel.Range).Text.ToString();\n    string objType = (string)(ws.Cells[r,2] as Excel.Range).Text.ToString();\n    string objName = (string)(ws.Cells[r,3] as Excel.Range).Text.ToString();\n    string desc = (string)(ws.Cells[r,5] as Excel.Range).Text.ToString();\n    \n    if (objType == \"Table\")\n    {\n        try\n        {\n            Model.Tables[tableName].Description = desc;\n        }\n        catch\n        {\n        }\n    }\n    else if (objType == \"Column\")\n    {\n        try\n        {\n            Model.Tables[tableName].Columns[objName].Description = desc;\n        }\n        catch\n        {            \n        }\n    }\n    else if (objType == \"Measure\")\n    {\n        try\n        {\n            Model.Tables[tableName].Measures[objName].Description = desc;\n        }\n        catch\n        {\n        }\n    }\n    else if (objType == \"Hierarchy\")\n    {\n        try\n        {\n            Model.Tables[tableName].Hierarchies[objName].Description = desc;\n        }\n        catch\n        {\n        }\n    }\n    else if (objType == \"Calculation Group\")\n    {\n        try\n        {\n            Model.Tables[tableName].Description = desc;\n        }\n        catch\n        {\n        }\n    }\n    else if (objType == \"Calculation Item\")\n    {\n        try\n        {\n            (Model.Tables[tableName] as CalculationGroupTable).CalculationItems[objName].Description = desc;\n        }\n        catch\n        {\n        }\n    }\n}\n\n// Close workbook and quit Excel program\nwb.Close();\nexcelApp.Quit();\nSystem.Runtime.InteropServices.Marshal.ReleaseComObject(excelApp);",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 68,
      "Name": "Byg og valider model\\---------Create, Remove, klargør---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Column, Partition"
    },
    {
      "Id": 69,
      "Name": "Byg og valider model\\Create AVERAGE kerneberegning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Creates an AVERAGE measure for every currently selected column, hides the columns and sets the aggregate function to None\nforeach(var c in Selected.Columns)\n{\n    var newMeasure = Model.Tables[\"Beregninger\"].AddMeasure(\n        \"Gennemsnit af \" + c.Name,                // Name\n        \"AVERAGE( \" + c.DaxObjectFullName + \" )\", // DAX expression\n        c.DisplayFolder                           // Display Folder\n    );\n    \n    // Set the format string on the new measure:\n    newMeasure.FormatString = \"#,##0.0\";\n\n    // Provide some documentation:\n    newMeasure.Description = \"Gennemsnittet af \" + c.DaxObjectFullName;\n\n    // Hide the base column:\n    c.IsHidden = true;\n    c.SummarizeBy = AggregateFunction.None;\n}\n\n",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 70,
      "Name": "Byg og valider model\\Create SUM kerneberegning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Creates a SUM measure for every currently selected column, hides the columns and sets the aggregate function to None\nforeach(var c in Selected.Columns)\n{\n    var newMeasure = \n        Model.Tables[\"Beregninger\"].AddMeasure(\n        \"Sum af \" + c.Name,                   // Name\n        \"SUM( \" + c.DaxObjectFullName + \" )\", // DAX expression\n        c.DisplayFolder                       // Display Folder\n    );\n\n    // Set the format string on the new measure:\n    if (c.DataType == DataType.Int64)\n    {\n        newMeasure.FormatString = \"#,##0\";\n    }\n    else\n    {\n        newMeasure.FormatString = \"#,##0.0\";\n    }\n\n    // Provide some documentation:\n    newMeasure.Description = \"Summen af \" + c.DaxObjectFullName;\n\n    // Hide the base column:\n    c.IsHidden = true;\n    c.SummarizeBy = AggregateFunction.None;\n}\n",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 71,
      "Name": "Byg og valider model\\Create COUNT kerneberegning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Creates a COUNT measure for every currently selected column, hides the columns and sets the aggregate function to None\nforeach(var c in Selected.Columns)\n{\n    var newMeasure = \n        Model.Tables[\"Beregninger\"].AddMeasure(\n        \"Antal \" + c.Name,                   // Name\n        \"COUNT( \" + c.DaxObjectFullName + \" )\", // DAX expression\n        c.DisplayFolder                       // Display Folder\n    );\n\n    // Set the format string on the new measure:\n    newMeasure.FormatString = \"#,##0\";\n \n    // Provide some documentation:\n    newMeasure.Description = \"Antallet af \" + c.DaxObjectFullName;\n\n    // Hide the base column:\n    c.IsHidden = true;\n    c.SummarizeBy = AggregateFunction.None;\n}\n",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 72,
      "Name": "Byg og valider model\\Create DISTINCTCOUNT kerneberegning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Creates a DISTINCTCOUNT measure for every currently selected column, hides the columns and sets the aggregate function to None\nforeach(var c in Selected.Columns)\n{\n    var newMeasure = \n        Model.Tables[\"Beregninger\"].AddMeasure(\n        \"Unik antal \" + c.Name,                         // Name\n        \"DISTINCTCOUNT( \" + c.DaxObjectFullName + \" )\", // DAX expression\n        c.DisplayFolder                                 // Display Folder\n    );\n\n    // Set the format string on the new measure:\n    newMeasure.FormatString = \"#,##0\";\n \n    // Provide some documentation:\n    newMeasure.Description = \"Det unikke antal af \" + c.DaxObjectFullName;\n\n    // Hide the base column:\n    c.IsHidden = true;\n    c.SummarizeBy = AggregateFunction.None;\n}\n",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 73,
      "Name": "Byg og valider model\\Create MAX kerneberegning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Creates a MAX measure for every currently selected column, hides the columns and sets the aggregate function to None\nforeach(var c in Selected.Columns)\n{\n    var newMeasure = \n        Model.Tables[\"Beregninger\"].AddMeasure(\n        \"Max for \" + c.Name,                         // Name\n        \"MAX( \" + c.DaxObjectFullName + \" )\", // DAX expression\n        c.DisplayFolder                                 // Display Folder\n    );\n\n    // Set the format string on the new measure:\n    newMeasure.FormatString = \"#,##0.0\";\n \n    // Provide some documentation:\n    newMeasure.Description = \"Maksimum for \" + c.DaxObjectFullName;\n\n    // Hide the base column:\n    c.IsHidden = true;\n    c.SummarizeBy = AggregateFunction.None;\n}\n",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 74,
      "Name": "Byg og valider model\\Create MIN kerneberegning",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 and Morten Lønskov TE3 team\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-sum-measures-from-columns.html\nBeskrivelse: Makro, der Createter eksplicit beregning ud fra kolonne\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Creates a MIN measure for every currently selected column, hides the columns and sets the aggregate function to None\nforeach(var c in Selected.Columns)\n{\n    var newMeasure = \n        Model.Tables[\"Beregninger\"].AddMeasure(\n        \"Min for \" + c.Name,                         // Name\n        \"MIN( \" + c.DaxObjectFullName + \" )\", // DAX expression\n        c.DisplayFolder                                 // Display Folder\n    );\n\n    // Set the format string on the new measure:\n    newMeasure.FormatString = \"#,##0.0\";\n \n    // Provide some documentation:\n    newMeasure.Description = \"Minimum for \" + c.DaxObjectFullName;\n\n    // Hide the base column:\n    c.IsHidden = true;\n    c.SummarizeBy = AggregateFunction.None;\n}\n",
      "Tooltip": "",
      "ValidContexts": "Column"
    },
    {
      "Id": 75,
      "Name": "Byg og valider model\\Create et nyt shared expression",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228, ChatGPT og ...\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Beginner/script-create-m-parameter.html\nBeskrivelse: Makro, der Createter et parameter og bagefter fortæller hvordan det kan bruges\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// This script creates a new M parameter in the 'Shared Expressions (Parametre)' of a model.\n//\n// Create a new shared expression called \"New Parameter\"\n\nModel.AddExpression( \n    \"New Parameter\", \n    @\"\n\"\"Parameter Text\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\"\n\n);\n\n// Provides an output informing how to configure and use the parameter\nInfo ( \n    \"Created a new Shared Expression called 'New Parameter', which is an M Parameter template.\" + \n    \"\\n------------------------------------------------------\\n\" + \n    \"To configure:\" +\n    \"\\n------------------------------------------------------\\n    \" + \n    \"1. Replace the text 'New Parameter' with the desired parameter value\\n    \" +\n    \"2. Set the data type appropriately\\n    \" +\n    \"3. Replace any values found in the M partitions with the parameter reference.\" );\n",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 76,
      "Name": "Byg og valider model\\Create et nyt shared expression (auto-replace)",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Kurt Buhler\nLink to source: https://docs.tabulareditor.com/common/CSharpScripts/Advanced/script-create-and-replace-M-parameter.html\nBeskrivelse: Makro, der Createter et parameter, og søger hele modellen igennem for at auto-replace værdier deres svarer to parametrets key\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// This script creates a new M Parameter as a 'Shared Expression'.\n// It will also find the default value in all M partitions and replace them with the parameter object name.\n//#r \"System.Drawing\"\n\nusing System.Drawing;\nusing System.Text.RegularExpressions;\nusing System.Windows.Forms;\n\n// Hide the 'Running Macro' spinbox\nScriptHelper.WaitFormVisible = false;\n\n// Initialize variables\nstring _ParameterName = \"New Parameter\";\nstring _ParameterValue = \"ParameterValue\";\n\n// WinForms prompt to get Parameter Name / Value input\nusing (Form prompt = new Form())\n{\n    Font formFont = new Font(\"Segoe UI\", 11); \n\n    // Prompt config\n    prompt.AutoSize = true;\n    prompt.MinimumSize = new Size(380, 120);\n    prompt.Text = \"Create New M Parameter\";\n    prompt.StartPosition = FormStartPosition.CenterScreen;\n\n    // Find: label\n    Label parameterNameLabel = new Label() { Text = \"Enter Name:\" };\n    parameterNameLabel.Location = new Point(20, 20);\n    parameterNameLabel.AutoSize = true;\n    parameterNameLabel.Font = formFont;\n\n    // Textbox for inputing the substring text\n    TextBox parameterNameBox = new TextBox();\n    parameterNameBox.Width = 200;\n    parameterNameBox.Location = new Point(parameterNameLabel.Location.X + parameterNameLabel.Width + 20, parameterNameLabel.Location.Y - 4);\n    parameterNameBox.SelectedText = \"New Parameter\";\n    parameterNameBox.Font = formFont;\n\n    // Replace: label\n    Label parameterValueLabel = new Label() { Text = \"Enter Value:\" };\n    parameterValueLabel.Location = new Point(parameterNameLabel.Location.X, parameterNameLabel.Location.Y + parameterNameLabel.Height + 20);\n    parameterValueLabel.AutoSize = true;\n    parameterValueLabel.Font = formFont;\n\n    // Textbox for inputting the substring text\n    TextBox parameterValueBox = new TextBox() { Left = parameterValueLabel.Right + 20, Top = parameterValueLabel.Location.Y - 4, Width = parameterNameBox.Width };\n    parameterValueBox.SelectedText = \"Parameter Value\";\n    parameterValueBox.Font = formFont;\n\n    // OK Button\n    Button okButton = new Button() { Text = \"Create\", Left = 20, Width = 75, Top = parameterValueBox.Location.Y + parameterValueBox.Height + 20 };\n    okButton.MinimumSize = new Size(75, 25);\n    okButton.AutoSize = true;\n    okButton.Font = formFont;\n\n    // Cancel Button\n    Button cancelButton = new Button() { Text = \"Cancel\", Left = okButton.Location.X + okButton.Width + 10, Top = okButton.Location.Y };\n    cancelButton.MinimumSize = new Size(75, 25);\n    cancelButton.AutoSize = true;\n    cancelButton.Font = formFont;\n\n    // Button actions\n    okButton.Click += (sender, e) => { _ParameterName = parameterNameBox.Text; _ParameterValue = parameterValueBox.Text; prompt.DialogResult = DialogResult.OK; };\n    cancelButton.Click += (sender, e) => { prompt.DialogResult = DialogResult.Cancel; };\n\n    prompt.AcceptButton = okButton;\n    prompt.CancelButton = cancelButton;\n\n    prompt.Controls.Add(parameterNameLabel);\n    prompt.Controls.Add(parameterNameBox);\n    prompt.Controls.Add(parameterValueLabel);\n    prompt.Controls.Add(parameterValueBox);\n    prompt.Controls.Add(okButton);\n    prompt.Controls.Add(cancelButton);\n\n    // The user clicked OK, so perform the find-and-replace logic\n    if (prompt.ShowDialog() == DialogResult.OK)\n    {\n\n        // Creates the parameter\n        Model.AddExpression( \n            _ParameterName, \n            @\"\n        \"\"\" + _ParameterValue.ToLower() +\n        @\"\"\" meta [\n            IsParameterQuery         = true,\n            IsParameterQueryRequired = true,\n            Type                     = type text\n        ]\"\n        );\n        \n        \n        // Informs the user that the parameter was successfully created\n        Info ( \n            \"Successfully created a new parameter: \" + @\"\"\"\" +\n            _ParameterName + @\"\"\"\" +\n            \"\\nDefault value: \" + @\"\"\"\" +\n            _ParameterValue + @\"\"\"\");\n        \n        \n        // Finds the parameter default value in M Partitions & replaces with the parameter name\n        string _Find = @\"\"\"\" + _ParameterValue + @\"\"\"\";\n        string _Replace = @\"#\"\"\" + _ParameterName + @\"\"\"\";\n        \n        int _NrMPartitions = 0;\n        int _NrReplacements = 0;\n        var _ReplacementsList = new List<string>();\n        \n        foreach ( var _Tables in Model.Tables )\n        {\n            foreach ( var _p in _Tables.Partitions )\n            {\n                if ( _p.SourceType == PartitionSourceType.M )\n                {\n                    if ( _p.Expression != _p.Expression.Replace( _Find, _Replace ) )\n                    {\n                        _p.Expression = _p.Expression.Replace( _Find, _Replace );\n        \n                        // Tracks which M partitions were replaced (and how many)\n                        _NrReplacements = _NrReplacements + 1;\n                        _ReplacementsList.Add( _p.Name );\n                    }\n        \n                // Counts the total # M Partitions\n                _NrMPartitions = _NrMPartitions + 1;\n                }\n            }\n        }\n        \n        \n        // Makes a bulleted list of all the M partitions that were replaced\n        string _ReplacedPartitions = \" • \" + String.Join(\"\\n • \", _ReplacementsList );\n        \n        \n        // Informs \n        //      - Whether the Find & Replace was successful\n        //      - How many M partitions were replaced\n        //      - Which M partitions had the Find & Replace done\n        Info (\n            \"Successfully replaced\\n\\n \" +\n            _Find + \n            \"\\n\\n with: \\n\\n\" + \n            _Replace + \n            \"\\n\\n in \" + \n            Convert.ToString(_NrReplacements) +\n            \" of \" +\n            Convert.ToString(_NrMPartitions) +  \n            \" M Partitions:\\n\" +\n            _ReplacedPartitions\n        );\n\n    }\n    else\n    {\n    Error ( \"Cancelled input! Ended script without changes.\");\n    }\n}\n",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 77,
      "Name": "Byg og valider model\\Create mulighed for implicitte beregninger i hele modellen",
      "Enabled": "true",
      "Execute": "/*\nForfatter: @JamesDBartlett3@techhub.social og Andreas Nordgaard\nLink to source: https://github.com/PowerBI-tips/TabularEditor-Scripts/blob/main/Basic/Nuke%20All%20Implicit%20Measures.csx\nBeskrivelse: Makro, der klargør Remove muligheden for implitte beregninger\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    03-10-2024        aols0228    Frigivelse af makro\n*/\n\n// Title: Enable All Implicit Measures.csx\n// Description: Uses two methods to enable all Implicit Measures in the model\n\n// 1. Set \"Encourage Implicit Measures\" option in Model = true\nModel.DiscourageImplicitMeasures = false;\n\n// 2. Set \"Summarize By\" property on all columns to AggregateFunction.None\nforeach (var column in Model.Tables.SelectMany(t => t.Columns))\n{\n    column.SummarizeBy = AggregateFunction.Default;\n}",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 78,
      "Name": "Byg og valider model\\Create rækkebaseret sikkerhed (RLS)",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Esben Tvergaard etve0004\nLink to source: \nBeskrivelse: Makro, der implementerer rækkesikkerhedsfunktioner\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        etve004    Frigivelse af makro\n*/\n\n/*Beskrivelse: Formålet med dette script er at gøre det nemt for modeludvikler at implementere RLS på sin Power BI-tjenesten Datamodel.\nSciptet anvendes ved at åbne en datamodel med Tabular Editor 3, og køre scriptet i C#-Editoren. Når skriptet køres sker der tre \nting; 1. RLS-tabeller importeres to modellen, 2. Relationer mellem RLS-tabeller Createtes og 3. Sikkerheds roller Createtes.\n*/\n\n/*Change Log:\nVer. | Developer | Date [DD-MM-YYYY] | Description\n1.0  | ETVE      | 22-02-2023        | Creation of C# script\n2.0  | SWET      | 27-02-2023        | Changed the script such that it can be applied to afsnit, afdeling and overafdeling level altogether.\n3.0  | ETVE      | 05-06-2023        | Parameterizing table queries with Server and Database.\n4.0  | ETVE      | 12-02-2024        | Augmenting partitions to point to Databricks.\n*/\n\n\n//// 1. IMPORTÈR TABELLER ////\n\n// Importer Medarbejdertabel med UserPrincipalName (UPN) - Eksempel: navn@regionh.dk\n\nvar RLS_Medarbejdertabel = Model.AddTable(\"RLS_Medarbejdertabel\", createPartition: false);\nRLS_Medarbejdertabel.AddMPartition(\"RLS_Medarbejdertabel\", \"let Source = Databricks.Catalogs(Server, Cluster, null), Database = Source{[Name=Catalog, Kind=\\\"Database\\\"]}[Data], Schema = Database{[Name=\\\"sikkerhedsp\\\", Kind=\\\"Schema\\\"]}[Data], Data = Schema{[Name=\\\"rls_medarbejdertabel\\\",Kind=\\\"View\\\"]}[Data] in Data \");\n\n\n\nvar dataColumn1 = Model.Tables[\"RLS_Medarbejdertabel\"].AddDataColumn();\ndataColumn1.DataType = DataType.String;\ndataColumn1.SourceColumn = \"AuthorizedHeadDepartmentComboKey_X\";\ndataColumn1.Name = \"AuthorizedHeadDepartmentComboKey_X\";\nvar dataColumn2 = Model.Tables[\"RLS_Medarbejdertabel\"].AddDataColumn();\ndataColumn2.DataType = DataType.String;\ndataColumn2.SourceColumn = \"AuthorizedHospitalAreaComboKey_X\";\ndataColumn2.Name = \"AuthorizedHospitalAreaComboKey_X\";\nvar dataColumn3 = Model.Tables[\"RLS_Medarbejdertabel\"].AddDataColumn();\ndataColumn3.DataType = DataType.String;\ndataColumn3.SourceColumn = \"AuthorizedRegionComboKey_X\";\ndataColumn3.Name = \"AuthorizedRegionComboKey_X\";\nvar dataColumn4 = Model.Tables[\"RLS_Medarbejdertabel\"].AddDataColumn();\ndataColumn4.SourceColumn = \"Name\";\ndataColumn4.Name = \"Name\";\n\nRLS_Medarbejdertabel.IsHidden = true;\n\n// Importer Brotabel med measure (Has Access)\n\nvar RLS_OrganisationMedarbejderBrotabel = Model.AddTable(\"RLS_OrganisationMedarbejderBrotabel\", createPartition: false);\nRLS_OrganisationMedarbejderBrotabel.AddMPartition(\"RLS_OrganisationMedarbejderBrotabel\",\"let Source = Databricks.Catalogs(Server, Cluster, null), Database = Source{[Name=Catalog, Kind=\\\"Database\\\"]}[Data], Schema = Database{[Name=\\\"sikkerhedsp\\\",Kind=\\\"Schema\\\"]}[Data], Data = Schema{[Name=\\\"rls_organisationmedarbejderbrotabel\\\",Kind=\\\"View\\\"]}[Data] in Data \");\n\nvar dataColumn5 = Model.Tables[\"RLS_OrganisationMedarbejderBrotabel\"].AddDataColumn();\ndataColumn5.DataType = DataType.String;\ndataColumn5.SourceColumn = \"HeadDepartmentKey\";\ndataColumn5.Name = \"HeadDepartmentKey\";\nvar dataColumn6 = Model.Tables[\"RLS_OrganisationMedarbejderBrotabel\"].AddDataColumn();\ndataColumn6.DataType = DataType.String;\ndataColumn6.SourceColumn = \"EmployeeAuthorizationComboKey\";\ndataColumn6.Name = \"EmployeeAuthorizationComboKey\";\n\nvar m = RLS_OrganisationMedarbejderBrotabel.AddMeasure(\"Has Access\");\nm.Expression = \"NOT ISEMPTY( RLS_OrganisationMedarbejderBrotabel )\";\n\nRLS_OrganisationMedarbejderBrotabel.IsHidden = true;\n\n// Importer Organisationstabel. \n\nvar RLS_Organisationstabel = Model.AddTable(\"RLS_Organisationstabel\", createPartition: false);\nRLS_Organisationstabel.AddMPartition(\"RLS_Organisationstabel\", \"let Source = Databricks.Catalogs(Server, Cluster, null), Database = Source{[Name=Catalog, Kind=\\\"Database\\\"]}[Data], Schema = Database{[Name=\\\"sikkerhedsp\\\",Kind=\\\"Schema\\\"]}[Data], Data = Schema{[Name=\\\"rls_organisationstabel\\\",Kind=\\\"View\\\"]}[Data] in Data \");\n\nvar dataColumn7 = Model.Tables[\"RLS_Organisationstabel\"].AddDataColumn();\ndataColumn7.SourceColumn = \"HeadDepartmentKey\";\ndataColumn7.Name = \"HeadDepartmentKey\";\nvar dataColumn8 = Model.Tables[\"RLS_Organisationstabel\"].AddDataColumn();\ndataColumn8.DataType = DataType.Int64;\ndataColumn8.SourceColumn = \"DepartmentKey\";\ndataColumn8.Name = \"DepartmentKey\";\n\nRLS_Organisationstabel.IsHidden = true;\n\n\n//// 2. Create RELATIONER ////\n\n// Relation mellem Organisationstabel og Brotabel\nvar rel = Model.AddRelationship();\nrel.FromColumn = RLS_OrganisationMedarbejderBrotabel.Columns[\"HeadDepartmentKey\"];\nrel.ToColumn = RLS_Organisationstabel.Columns[\"HeadDepartmentKey\"];\nrel.FromCardinality = RelationshipEndCardinality.Many;\nrel.ToCardinality = RelationshipEndCardinality.Many;\n\n// Relation mellem Medarbejdertabel og Brotabel (OVERAFDELING)\nrel = Model.AddRelationship();\nrel.FromColumn = RLS_OrganisationMedarbejderBrotabel.Columns[\"EmployeeAuthorizationComboKey\"];\nrel.ToColumn = RLS_Medarbejdertabel.Columns[\"AuthorizedHeadDepartmentComboKey_X\"];\nrel.FromCardinality = RelationshipEndCardinality.Many;\nrel.ToCardinality = RelationshipEndCardinality.Many;\nrel.IsActive = false;\n\n// Relation mellem Medarbejdertabel og Brotabel (HOSPITAL)\nrel = Model.AddRelationship();\nrel.FromColumn = RLS_OrganisationMedarbejderBrotabel.Columns[\"EmployeeAuthorizationComboKey\"];\nrel.ToColumn = RLS_Medarbejdertabel.Columns[\"AuthorizedHospitalAreaComboKey_X\"];\nrel.FromCardinality = RelationshipEndCardinality.Many;\nrel.ToCardinality = RelationshipEndCardinality.Many;\nrel.IsActive = false;\n\n// Relation mellem Medarbejdertabel og Brotabel (REGION)\nrel = Model.AddRelationship();\nrel.FromColumn = RLS_OrganisationMedarbejderBrotabel.Columns[\"EmployeeAuthorizationComboKey\"];\nrel.ToColumn = RLS_Medarbejdertabel.Columns[\"AuthorizedRegionComboKey_X\"];\nrel.FromCardinality = RelationshipEndCardinality.Many;\nrel.ToCardinality = RelationshipEndCardinality.Many;\nrel.IsActive = false;\n\n\n//// 3. Create ROLLER ////\n\nvar r = Model.AddRole(\"Full Access\");\nr.ModelPermission = ModelPermission.Read;\n\nr = Model.AddRole(\"HeadDepartment Access\");\nr.ModelPermission = ModelPermission.Read;\nr.RowLevelSecurity[\"RLS_Medarbejdertabel\"] = \"RLS_Medarbejdertabel[Name] = USERPRINCIPALNAME( )\";\nr.RowLevelSecurity[\"RLS_Organisationstabel\"] = \"CALCULATE( [Has Access], USERELATIONSHIP( RLS_Medarbejdertabel[AuthorizedHeadDepartmentComboKey_X], RLS_OrganisationMedarbejderBrotabel[EmployeeAuthorizationComboKey] ), RLS_Medarbejdertabel[Name] = USERPRINCIPALNAME( ) )\";\n\nr = Model.AddRole(\"Hospital Access\");\nr.ModelPermission = ModelPermission.Read;\nr.RowLevelSecurity[\"RLS_Medarbejdertabel\"] = \"RLS_Medarbejdertabel[Name] = USERPRINCIPALNAME( )\";\nr.RowLevelSecurity[\"RLS_Organisationstabel\"] = \"CALCULATE( [Has Access], USERELATIONSHIP( RLS_Medarbejdertabel[AuthorizedHospitalAreaComboKey_X], RLS_OrganisationMedarbejderBrotabel[EmployeeAuthorizationComboKey] ), RLS_Medarbejdertabel[Name] = USERPRINCIPALNAME( ) )\";\n\nr = Model.AddRole(\"Region Access\");\nr.ModelPermission = ModelPermission.Read;\nr.RowLevelSecurity[\"RLS_Medarbejdertabel\"] = \"RLS_Medarbejdertabel[Name] = USERPRINCIPALNAME( )\";\nr.RowLevelSecurity[\"RLS_Organisationstabel\"] = \"CALCULATE( [Has Access], USERELATIONSHIP( RLS_Medarbejdertabel[AuthorizedRegionComboKey_X], RLS_OrganisationMedarbejderBrotabel[EmployeeAuthorizationComboKey] ), RLS_Medarbejdertabel[Name] = USERPRINCIPALNAME( ) )\";\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 79,
      "Name": "Byg og valider model\\Create Vertipaq Annotations",
      "Enabled": "true",
      "Execute": "/*\nForfatter:Michael Kovalsky\nLink to source: https://www.elegantbi.com/post/vertipaqintabulareditor\nBeskrivelse: Makro, der læser VertiPaq og derefter indlejrer det den finder ud af i Best Practice Analyzer (BPA)\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Store DMV Queries as Data Tables\r\nvar DMV_Tables = ExecuteDax(\"SELECT [ID],[Name] FROM $SYSTEM.TMSCHEMA_TABLES\").Tables[0];\r\nvar DMV_Dimensions = ExecuteDax(\"SELECT [DIMENSION_NAME], [DIMENSION_CARDINALITY] FROM $SYSTEM.MDSCHEMA_DIMENSIONS\").Tables[0];\r\nvar DMV_Relationships = ExecuteDax(\"SELECT [ID],[Name] FROM $SYSTEM.TMSCHEMA_RELATIONSHIPS\").Tables[0];\r\nvar DMV_Hierarchies = ExecuteDax(\"SELECT [ID], [TableID], [Name] FROM $SYSTEM.TMSCHEMA_HIERARCHIES\").Tables[0];\r\nvar DMV_Columns = ExecuteDax(\"SELECT [ID],[TableID],[ExplicitName] FROM $SYSTEM.TMSCHEMA_COLUMNS\").Tables[0];\r\nvar DMV_Partitions = ExecuteDax(\"SELECT [ID],[TableID],[Name] FROM $SYSTEM.TMSCHEMA_PARTITIONS\").Tables[0];\r\nvar DMV_PartitionStorages = ExecuteDax(\"SELECT [ID],[PartitionID] FROM $SYSTEM.TMSCHEMA_PARTITION_STORAGES\").Tables[0];\r\nvar DMV_SegmentMapStorages = ExecuteDax(\"SELECT [PartitionStorageID],[RecordCount],[SegmentCount],[RecordsPerSegment] FROM $SYSTEM.TMSCHEMA_SEGMENT_MAP_STORAGES\").Tables[0];\r\nvar DMV_StorageTableColumns = ExecuteDax(\"SELECT [DIMENSION_NAME],[ATTRIBUTE_NAME],[COLUMN_TYPE],[DICTIONARY_SIZE] FROM $SYSTEM.DISCOVER_STORAGE_TABLE_COLUMNS\").Tables[0];\r\nvar DMV_StorageTables = ExecuteDax(\"SELECT [DIMENSION_NAME],[TABLE_ID],[ROWS_COUNT] FROM $SYSTEM.DISCOVER_STORAGE_TABLES\").Tables[0];\r\nvar DMV_ColumnSegments = ExecuteDax(\"SELECT [DIMENSION_NAME],[TABLE_ID],[COLUMN_ID],[USED_SIZE] FROM $SYSTEM.DISCOVER_STORAGE_TABLE_COLUMN_SEGMENTS\").Tables[0];\r\n\r\n// Remove Existing Vertipaq Annotations\r\nModel.RemoveAnnotation(\"Vertipaq_ModelSize\");\r\n\r\nforeach (var o in Model.AllHierarchies)\r\n{   \r\n    o.RemoveAnnotation(\"Vertipaq_HierarchyID\");\r\n    o.RemoveAnnotation(\"Vertipaq_UserHierarchySize\");\r\n}\r\n\r\nforeach (var o in Model.AllColumns)\r\n{   \r\n    o.RemoveAnnotation(\"Vertipaq_ColumnID\");\r\n    o.RemoveAnnotation(\"Vertipaq_ColumnHierarchySize\");\r\n    o.RemoveAnnotation(\"Vertipaq_DataSize\");\r\n    o.RemoveAnnotation(\"Vertipaq_DictionarySize\");\r\n    o.RemoveAnnotation(\"Vertipaq_Cardinality\");\r\n    o.RemoveAnnotation(\"Vertipaq_ColumnSize\");\r\n    o.RemoveAnnotation(\"Vertipaq_ColumnSizePctOfTable\");\r\n    o.RemoveAnnotation(\"Vertipaq_ColumnSizePctOfModel\");\r\n}\r\n\r\nforeach (var o in Model.Relationships.ToList())\r\n{    \r\n    o.RemoveAnnotation(\"Vertipaq_RelationshipID\");\r\n    o.RemoveAnnotation(\"Vertipaq_RelationshipSize\");\r\n    o.RemoveAnnotation(\"Vertipaq_MaxFromCardinality\");\r\n    o.RemoveAnnotation(\"Vertipaq_MaxToCardinality\");\r\n    o.RemoveAnnotation(\"Vertipaq_RIViolationInvalidRows\");\r\n}\r\n\r\nforeach (var o in Model.Tables.ToList())\r\n{\r\n    o.RemoveAnnotation(\"Vertipaq_TableID\");\r\n    o.RemoveAnnotation(\"Vertipaq_RowCount\");\r\n    o.RemoveAnnotation(\"Vertipaq_TableSize\");\r\n    o.RemoveAnnotation(\"Vertipaq_TableSizePctOfModel\");\r\n}\r\n\r\nforeach (var o in Model.AllPartitions)\r\n{\r\n    o.RemoveAnnotation(\"Vertipaq_PartitionID\");\r\n    o.RemoveAnnotation(\"Vertipaq_PartitionStorageID\");\r\n    o.RemoveAnnotation(\"Vertipaq_RecordCount\");\r\n    o.RemoveAnnotation(\"Vertipaq_RecordsPerSegment\");\r\n    o.RemoveAnnotation(\"Vertipaq_SegmentCount\");\r\n}\r\n\r\n// Set Table IDs\r\nfor (int r = 0; r < DMV_Tables.Rows.Count; r++)\r\n{\r\n    string tblID = DMV_Tables.Rows[r][0].ToString();\r\n    string tblName = DMV_Tables.Rows[r][1].ToString();\r\n    \r\n    Model.Tables[tblName].SetAnnotation(\"Vertipaq_TableID\",tblID);         \r\n}\r\n\r\n// Set Table Row Counts\r\nfor (int r = 0; r < DMV_Dimensions.Rows.Count; r++)\r\n{\r\n    string tblName = DMV_Dimensions.Rows[r][0].ToString();\r\n    string recordCount = DMV_Dimensions.Rows[r][1].ToString();\r\n    \r\n    if (tblName != \"Measures\")\r\n    {\r\n        Model.Tables[tblName].SetAnnotation(\"Vertipaq_RowCount\",recordCount);\r\n    }\r\n}\r\n\r\n// Set Relationship IDs\r\nfor (int r = 0; r < DMV_Relationships.Rows.Count; r++)\r\n{\r\n    string ID = DMV_Relationships.Rows[r][0].ToString();   \r\n    string relID = DMV_Relationships.Rows[r][1].ToString();    \r\n    \r\n    Model.Relationships[relID].SetAnnotation(\"Vertipaq_RelationshipID\",ID);    \r\n}\r\n\r\n// Set Hierarchy IDs\r\nfor (int r = 0; r < DMV_Hierarchies.Rows.Count; r++)\r\n{\r\n    string hID = DMV_Hierarchies.Rows[r][0].ToString();\r\n    string tableID = DMV_Hierarchies.Rows[r][1].ToString();\r\n    string hName = DMV_Hierarchies.Rows[r][2].ToString();\r\n    \r\n    foreach (var t in Model.Tables.Where(a => a.GetAnnotation(\"Vertipaq_TableID\") == tableID))\r\n    {\r\n        string tableName = t.Name;\r\n        Model.Tables[tableName].Hierarchies[hName].SetAnnotation(\"Vertipaq_HierarchyID\",hID);\r\n    }        \r\n}\r\n\r\n// Set Column IDs\r\nfor (int r = 0; r < DMV_Columns.Rows.Count; r++)\r\n{\r\n    string colID = DMV_Columns.Rows[r][0].ToString();\r\n    string tableID = DMV_Columns.Rows[r][1].ToString();\r\n    string colName = DMV_Columns.Rows[r][2].ToString();\r\n    \r\n    foreach (var t in Model.Tables.Where(a => a.GetAnnotation(\"Vertipaq_TableID\") == tableID))\r\n    {\r\n        string tableName = t.Name;\r\n        \r\n        if (colName.StartsWith(\"RowNumber-\") == false && colName != \"\")\r\n        {\r\n            Model.Tables[tableName].Columns[colName].SetAnnotation(\"Vertipaq_ColumnID\",colID);\r\n        }\r\n    }\r\n}\r\n\r\n// Set Partition IDs\r\nfor (int r = 0; r < DMV_Partitions.Rows.Count; r++)\r\n{\r\n    string pID = DMV_Partitions.Rows[r][0].ToString();\r\n    string tableID = DMV_Partitions.Rows[r][1].ToString();\r\n    string pName = DMV_Partitions.Rows[r][2].ToString();\r\n    \r\n    foreach (var t in Model.Tables.Where(a => a.GetAnnotation(\"Vertipaq_TableID\") == tableID))\r\n    {\r\n        string tableName = t.Name;\r\n        \r\n        Model.Tables[tableName].Partitions[pName].SetAnnotation(\"Vertipaq_PartitionID\",pID);        \r\n    }\r\n}\r\n\r\n\r\n// Set Partition Storage IDs\r\nfor (int r = 0; r < DMV_PartitionStorages.Rows.Count; r++)\r\n{\r\n    string psID = DMV_PartitionStorages.Rows[r][0].ToString();\r\n    string pID = DMV_PartitionStorages.Rows[r][1].ToString();    \r\n    \r\n    foreach (var p in Model.AllPartitions.Where(a => a.GetAnnotation(\"Vertipaq_PartitionID\") == pID))\r\n    {\r\n        string tableName = p.Table.Name;\r\n        string pName = p.Name;\r\n        \r\n        Model.Tables[tableName].Partitions[pName].SetAnnotation(\"Vertipaq_PartitionStorageID\",psID);        \r\n    }\r\n}\r\n\r\n// Set Partition Stats\r\nfor (int r = 0; r < DMV_SegmentMapStorages.Rows.Count; r++)\r\n{\r\n    string psID = DMV_SegmentMapStorages.Rows[r][0].ToString();\r\n    string recordCount = DMV_SegmentMapStorages.Rows[r][1].ToString();    \r\n    string segmentCount = DMV_SegmentMapStorages.Rows[r][2].ToString();    \r\n    string recordsPerSegment = DMV_SegmentMapStorages.Rows[r][3].ToString();    \r\n    \r\n    foreach (var p in Model.AllPartitions.Where(a => a.GetAnnotation(\"Vertipaq_PartitionStorageID\") == psID))\r\n    {\r\n        string tableName = p.Table.Name;\r\n        string pName = p.Name;\r\n        \r\n        Model.Tables[tableName].Partitions[pName].SetAnnotation(\"Vertipaq_RecordCount\",recordCount);\r\n        Model.Tables[tableName].Partitions[pName].SetAnnotation(\"Vertipaq_SegmentCount\",segmentCount);\r\n        Model.Tables[tableName].Partitions[pName].SetAnnotation(\"Vertipaq_RecordsPerSegment\",recordsPerSegment);\r\n    }\r\n}\r\n\r\n// Set Dictionary Size\r\nfor (int r = 0; r < DMV_StorageTableColumns.Rows.Count; r++)\r\n{\r\n    string tableName = DMV_StorageTableColumns.Rows[r][0].ToString();    \r\n    string colName = DMV_StorageTableColumns.Rows[r][1].ToString();\r\n    string colType = DMV_StorageTableColumns.Rows[r][2].ToString();\r\n    string dictSize = DMV_StorageTableColumns.Rows[r][3].ToString();\r\n      \r\n    if (colType == \"BASIC_DATA\" && colName.StartsWith(\"RowNumber-\") == false)\r\n    {\r\n        Model.Tables[tableName].Columns[colName].SetAnnotation(\"Vertipaq_DictionarySize\",dictSize);\r\n    }\r\n}\r\n\r\n// Set Column Row Counts\r\nfor (int r = 0; r < DMV_StorageTables.Rows.Count; r++)\r\n{\r\n    string tableName = DMV_StorageTables.Rows[r][0].ToString();    \r\n    string usedColumn = DMV_StorageTables.Rows[r][1].ToString();    \r\n    string rowCount = DMV_StorageTables.Rows[r][2].ToString();    \r\n    int lastInd = usedColumn.LastIndexOf(\"(\");\r\n    string usedColumnID = usedColumn.Substring(lastInd+1,usedColumn.Length - lastInd - 2);\r\n    \r\n    \r\n    foreach (var c in Model.Tables[tableName].Columns.Where(a => a.GetAnnotation(\"Vertipaq_ColumnID\") == usedColumnID))\r\n    {\r\n        var colName = c.Name;\r\n        Model.Tables[tableName].Columns[colName].SetAnnotation(\"Vertipaq_Cardinality\",rowCount);\r\n    }    \r\n}\r\n\r\n// User Hierarchy Size\r\nfor (int r = 0; r < DMV_ColumnSegments.Rows.Count; r++)\r\n{\r\n    string tableName = DMV_ColumnSegments.Rows[r][0].ToString();    \r\n    string usedObj = DMV_ColumnSegments.Rows[r][1].ToString();    \r\n    string usedCol = DMV_ColumnSegments.Rows[r][2].ToString();    \r\n    string usedSize = DMV_ColumnSegments.Rows[r][3].ToString();    \r\n    \r\n    int lastInd = usedObj.LastIndexOf(\"(\");\r\n    string usedObjID = usedObj.Substring(lastInd+1,usedObj.Length - lastInd - 2);    \r\n    \r\n    int lastInd2 = usedCol.LastIndexOf(\"(\");\r\n    string usedObjID2 = usedCol.Substring(lastInd2+1,usedCol.Length - lastInd2 - 2);    \r\n    \r\n    // User Hierarchy Size\r\n    foreach (var o in Model.Tables[tableName].Hierarchies.Where(a => a.GetAnnotation(\"Vertipaq_HierarchyID\") == usedObjID))\r\n    {\r\n        string hName = o.Name;\r\n        int hSize = Convert.ToInt32(Model.Tables[tableName].Hierarchies[hName].GetAnnotation(\"Vertipaq_UserHierarchySize\"));\r\n        \r\n        if (usedObj.StartsWith(\"U$\"))\r\n        {\r\n            if (hSize != null)\r\n            {\r\n                hSize = hSize + Convert.ToInt32(usedSize);\r\n            }\r\n            else\r\n            {\r\n                hSize = Convert.ToInt32(usedSize);\r\n            }\r\n        \r\n            Model.Tables[tableName].Hierarchies[hName].SetAnnotation(\"Vertipaq_UserHierarchySize\",hSize.ToString());                \r\n        }   \r\n    }    \r\n    \r\n    // Relationship Size\r\n    foreach (var o in Model.Relationships.Where(a => a.GetAnnotation(\"Vertipaq_RelationshipID\") == usedObjID))\r\n    {\r\n        string rName = o.ID;\r\n        int rSize = Convert.ToInt32(Model.Relationships[rName].GetAnnotation(\"Vertipaq_RelationshipSize\"));\r\n        \r\n        if (usedObj.StartsWith(\"R$\"))\r\n        {\r\n            if (rSize != null)\r\n            {\r\n                rSize = rSize + Convert.ToInt32(usedSize);\r\n            }\r\n            else\r\n            {\r\n                rSize = Convert.ToInt32(usedSize);\r\n            }\r\n        \r\n            Model.Relationships[rName].SetAnnotation(\"Vertipaq_RelationshipSize\",rSize.ToString());                \r\n        }\r\n    }\r\n    \r\n    // Column Hierarchy Size\r\n    foreach (var o in Model.Tables[tableName].Columns.Where(a => a.GetAnnotation(\"Vertipaq_ColumnID\") == usedObjID))\r\n    {\r\n        string colName = o.Name;\r\n        long colSize = Convert.ToInt64(Model.Tables[tableName].Columns[colName].GetAnnotation(\"Vertipaq_ColumnHierarchySize\"));\r\n        \r\n        if (usedObj.StartsWith(\"H$\"))\r\n        {\r\n            if (colSize != null)\r\n            {\r\n                colSize = colSize + Convert.ToInt32(usedSize);\r\n            }\r\n            else\r\n            {\r\n                colSize = Convert.ToInt64(usedSize);\r\n            }\r\n        \r\n            Model.Tables[tableName].Columns[colName].SetAnnotation(\"Vertipaq_ColumnHierarchySize\",colSize.ToString());                \r\n        }   \r\n    }  \r\n    \r\n    // Column Data Size\r\n    foreach (var o in Model.Tables[tableName].Columns.Where(a => a.GetAnnotation(\"Vertipaq_ColumnID\") == usedObjID2))\r\n    {\r\n        string colName = o.Name;\r\n        long colSize = Convert.ToInt64(Model.Tables[tableName].Columns[colName].GetAnnotation(\"Vertipaq_DataSize\"));\r\n        \r\n        if (usedObj.StartsWith(\"H$\") == false && usedObj.StartsWith(\"R$\") == false && usedObj.StartsWith(\"U$\") == false)\r\n        {\r\n            if (colSize != null)\r\n            {\r\n                colSize = colSize + Convert.ToInt64(usedSize);\r\n            }\r\n            else\r\n            {\r\n                colSize = Convert.ToInt64(usedSize);\r\n            }\r\n        \r\n            Model.Tables[tableName].Columns[colName].SetAnnotation(\"Vertipaq_DataSize\",colSize.ToString());                \r\n        }\r\n    }   \r\n}\r\n\r\n// Set Column & Table Size\r\nlong tableSizeCumulative = 0;\r\n\r\nforeach (var t in Model.Tables.ToList())\r\n{\r\n    string tableName = t.Name;\r\n    long colSizeCumulative = 0;\r\n    long userHierSizeCumulative = 0;\r\n    long relSizeCumulative = 0;       \r\n    \r\n    foreach (var c in t.Columns.ToList())\r\n    {        \r\n        string colName = c.Name;\r\n        var obj = Model.Tables[tableName].Columns[colName];\r\n        \r\n        long colHierSize = Convert.ToInt64(obj.GetAnnotation(\"Vertipaq_ColumnHierarchySize\"));\r\n        long dataSize = Convert.ToInt64(obj.GetAnnotation(\"Vertipaq_DataSize\"));\r\n        long dictSize = Convert.ToInt64(obj.GetAnnotation(\"Vertipaq_DictionarySize\"));\r\n        \r\n        long colSize = colHierSize + dataSize + dictSize;\r\n        colSizeCumulative = colSizeCumulative + colSize;        \r\n        \r\n        // Set Column Size\r\n        obj.SetAnnotation(\"Vertipaq_ColumnSize\",colSize.ToString());\r\n    }\r\n    \r\n    foreach (var h in t.Hierarchies.ToList())\r\n    {\r\n        string hName = h.Name;\r\n        var obj = Model.Tables[tableName].Hierarchies[hName];\r\n        \r\n        long userHierSize = Convert.ToInt32(obj.GetAnnotation(\"Vertipaq_UserHierarchySize\"));      \r\n        userHierSizeCumulative = userHierSizeCumulative + userHierSize;           \r\n    }\r\n    \r\n    foreach (var r in Model.Relationships.Where(a => a.FromTable.Name == tableName).ToList())\r\n    {\r\n        string rName = r.ID;\r\n        var obj = Model.Relationships[rName];\r\n        \r\n        long relSize = Convert.ToInt32(obj.GetAnnotation(\"Vertipaq_RelationshipSize\"));\r\n        \r\n        relSizeCumulative = relSizeCumulative + relSize;                \r\n    }\r\n    \r\n    long tableSize = colSizeCumulative + userHierSizeCumulative + relSizeCumulative;\r\n    tableSizeCumulative = tableSizeCumulative + tableSize;\r\n    \r\n    // Set Table Size\r\n    Model.Tables[tableName].SetAnnotation(\"Vertipaq_TableSize\",tableSize.ToString());\r\n}\r\n\r\n// Set Model Size\r\nModel.SetAnnotation(\"Vertipaq_ModelSize\",tableSizeCumulative.ToString());\r\n\r\n// Set Max From/To Cardinality, Referential Integrity Violations\r\nforeach (var r in Model.Relationships.ToList())\r\n{\r\n    string rName = r.ID;\r\n    string fromTbl = r.FromTable.Name;\r\n    string fromCol = r.FromColumn.Name;\r\n    string toTbl = r.ToTable.Name;\r\n    string toCol = r.ToColumn.Name;\r\n    //var obj = Model.Relationships[rName];\r\n    bool act = r.IsActive;\r\n    string fromTableFull = r.FromTable.DaxObjectFullName;    \r\n    string fromObject = r.FromColumn.DaxObjectFullName;\r\n    string toObject = r.ToColumn.DaxObjectFullName;\r\n    string dax;\r\n    \r\n    // Set Max From/To Cardinality\r\n    string fromCard = Model.Tables[fromTbl].Columns[fromCol].GetAnnotation(\"Vertipaq_Cardinality\");\r\n    string toCard = Model.Tables[toTbl].Columns[toCol].GetAnnotation(\"Vertipaq_Cardinality\");\r\n    \r\n    r.SetAnnotation(\"Vertipaq_MaxFromCardinality\",fromCard);\r\n    r.SetAnnotation(\"Vertipaq_MaxToCardinality\",toCard);   \r\n\r\n    // Set Referential Integrity Violations\r\n    if (act)\r\n    {\r\n        dax = \"SUMMARIZECOLUMNS(\\\"test\\\",CALCULATE(COUNTROWS(\"+fromTableFull+\"),ISBLANK(\"+toObject+\")))\";\r\n    }\r\n    else\r\n    {\r\n        dax = \"SUMMARIZECOLUMNS(\\\"test\\\",CALCULATE(COUNTROWS(\"+fromTableFull+\"),USERELATIONSHIP(\"+fromObject+\",\"+toObject+\"),ISBLANK(\"+toObject+\")))\";\r\n    }\r\n    \r\n    var daxResult = EvaluateDax(dax);\r\n    string blankRowCount = daxResult.ToString();\r\n    \r\n    if (blankRowCount != \"Table\")\r\n    {\r\n        r.SetAnnotation(\"Vertipaq_RIViolationInvalidRows\",blankRowCount);        \r\n    }\r\n    else\r\n    {\r\n        r.SetAnnotation(\"Vertipaq_RIViolationInvalidRows\",\"0\");\r\n    }\r\n}\r\n\r\n// Percent of Table and Model\r\nfloat modelSize = Convert.ToInt64(Model.GetAnnotation(\"Vertipaq_ModelSize\"));\r\n\r\nforeach (var t in Model.Tables.ToList())\r\n{\r\n    string tableName = t.Name;\r\n    var obj = Model.Tables[tableName];\r\n    \r\n    float tableSize = Convert.ToInt64(obj.GetAnnotation(\"Vertipaq_TableSize\"));\r\n    double tblpct = Math.Round(tableSize / modelSize,3);\r\n        \r\n    obj.SetAnnotation(\"Vertipaq_TableSizePctOfModel\",tblpct.ToString());\r\n    \r\n    foreach (var c in t.Columns.ToList())\r\n    {\r\n        string colName = c.Name;\r\n        var col = Model.Tables[tableName].Columns[colName];\r\n        \r\n        float colSize = Convert.ToInt64(col.GetAnnotation(\"Vertipaq_ColumnSize\"));\r\n        double colpctTbl = Math.Round(colSize / tableSize,3);\r\n        double colpctModel = Math.Round(colSize / modelSize,3);\r\n        \r\n        col.SetAnnotation(\"Vertipaq_ColumnSizePctOfTable\",colpctTbl.ToString());\r\n        col.SetAnnotation(\"Vertipaq_ColumnSizePctOfModel\",colpctModel.ToString());\r\n    }\r\n}\r\n\r\n// Remove Vertipaq ID Annotations\r\nforeach (var o in Model.AllHierarchies)\r\n{   \r\n    o.RemoveAnnotation(\"Vertipaq_HierarchyID\");\r\n}\r\n\r\nforeach (var o in Model.AllColumns)\r\n{\r\n    o.RemoveAnnotation(\"Vertipaq_ColumnID\");\r\n}\r\n\r\nforeach (var o in Model.Relationships.ToList())\r\n{    \r\n    o.RemoveAnnotation(\"Vertipaq_RelationshipID\");     \r\n}\r\n\r\nforeach (var o in Model.Tables.ToList())\r\n{\r\n    o.RemoveAnnotation(\"Vertipaq_TableID\");\r\n}\r\n\r\nforeach (var o in Model.AllPartitions)\r\n{\r\n    o.RemoveAnnotation(\"Vertipaq_PartitionID\");\r\n    o.RemoveAnnotation(\"Vertipaq_PartitionStorageID\");\r\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Column"
    },
    {
      "Id": 80,
      "Name": "Byg og valider model\\Remove mulighed for implicitte beregninger i hele modellen",
      "Enabled": "true",
      "Execute": "/*\nForfatter: @JamesDBartlett3@techhub.social\nLink to source: https://github.com/PowerBI-tips/TabularEditor-Scripts/blob/main/Basic/Nuke%20All%20Implicit%20Measures.csx\nBeskrivelse: Makro, der klargør Remove muligheden for implitte beregninger\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\n// Title: Nuke All Implicit Measures.csx\n// Description: Uses two methods to disable all Implicit Measures in the model\n\n// 1. Set \"Discourage Implicit Measures\" option in Model = true\nModel.DiscourageImplicitMeasures = true;\n\n// 2. Set \"Summarize By\" property on all columns to AggregateFunction.None\nforeach (var column in Model.Tables.SelectMany(t => t.Columns))\n{\n    column.SummarizeBy = AggregateFunction.None;\n}",
      "Tooltip": "",
      "ValidContexts": "Model, Measure"
    },
    {
      "Id": 81,
      "Name": "Udsto model\\---------Vis---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Table, Column"
    },
    {
      "Id": 82,
      "Name": "Udsto model\\Vis alle partitioner",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der slår alle partitioner op og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    24-10-2024        aols0228    Frigivelse af makro\n*/\n\n// This script iterates through all tables in the model and outputs each table's name and its partitions, including their expressions, in a single Info() call.\n\nMacro(@\"Systemforvaltning\\Partition\\Vis alle\");",
      "Tooltip": "",
      "ValidContexts": "Model, Table, Partition, Expression"
    },
    {
      "Id": 83,
      "Name": "Udsto model\\Vis alle shared expressions",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der slår alle shared expressions op og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    02-10-2024        aols0228    Frigivelse af makro\n*/\n\n// This script iterates through all shared expressions in the model and outputs their names and corresponding expressions in a single Info() call.\n\nMacro(@\"Systemforvaltning\\Shared Expression\\Vis alle\");",
      "Tooltip": "",
      "ValidContexts": "Model, Expression"
    },
    {
      "Id": 84,
      "Name": "Udsto model\\---------Shift---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Table, Column"
    },
    {
      "Id": 85,
      "Name": "Udsto model\\Shift catalog to production",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der ændrer Catalog to production og Remove _sandbox\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    03-10-2024        aols0228    Frigivelse af makro\n*/\n\n\nMacro(@\"Systemforvaltning\\Catalog\\Shift to production\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 86,
      "Name": "Udsto model\\Shift cluster to formål 1 production (standard)",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 87,
      "Name": "Udsto model\\Shift cluster to formål 2 production",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 88,
      "Name": "Udsto model\\Shift cluster to formål 3 production",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nMacro(@\"Systemforvaltning\\Cluster\\fso\");",
      "Tooltip": "",
      "ValidContexts": "Expression"
    },
    {
      "Id": 89,
      "Name": "Systemforvaltning\\---------Databricks---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 90,
      "Name": "Systemforvaltning\\Miljø\\Modelskabelon",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der Createter/opdater shared expressions, så de nulstoles to skabelonen\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    20-09-2024        aols0228    For at kunne nulstole modelskabelon inden den frigives efter tests,\n*/\n\nMacro(@\"Systemforvaltning\\Server\\production\");\n\npublic class ExpressionInfo\n{\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\n// Define a variable for the empty value and for the blank description\nvar emptyValue = \"\";\nvar blankSkabelonBeskrivelse = \"Blank skabelon\";\n\nvar _SharedExpressions = new Dictionary<string, ExpressionInfo>()\n{\n    // Key: string that identifies the expression\n    // Value: ExpressionInfo object containing the actual expression value and a description\n    { \"Cluster\", new ExpressionInfo { Value = emptyValue, Description = blankSkabelonBeskrivelse } },\n    { \"Catalog\", new ExpressionInfo { Value = emptyValue, Description = blankSkabelonBeskrivelse } },\n    { \"Schema\", new ExpressionInfo { Value = emptyValue, Description = blankSkabelonBeskrivelse } }\n    // Add other entries if needed, following the format: { \"Key\", new ExpressionInfo { Value = \"value\", Description = \"description\" } },\n};\n\nforeach (var entry in _SharedExpressions)\n{\n    var key = entry.Key; // Get the key from the dictionary\n    var _parameters = entry.Value; // Get the ExpressionInfo object\n    \n    Model.Expressions[key].Expression = \n        $@\"// {_parameters.Description} {key.ToLower()}\n\"\"\" + _parameters.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n}",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 91,
      "Name": "Systemforvaltning\\Miljø\\UdShift tekstvariable med parametre to sandbox-miljøet",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der udShifter tekstværdier i alle partitioner med parametre\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n\nstring komma = \", \";\nstring slash = \"\\\"\";\n\nList<string> ServerStrings = new List<string>\n{\n    \"adb-\"\n    // Add more server strings as needed\n};\n\nList<string> ClusterStrings = new List<string>\n{\n    \"sql/\",   // fso: small-sized Power BI-tjenesten cluster\n    \"sql/\"  // : medium-sized Power BI-tjenesten cluster\n    // Add more cluster strings as needed\n};\n\nList<string> CatalogStrings = new List<string>\n{\n    \"fso\",\n    \"fso\",\n    // Add more catalog strings as needed\n};\n\nstring ServerParameter = \"Server\";\nstring ClusterParameter = \"Cluster\";\nstring CatalogParameter = \"Catalog\";\n\nforeach (var artifact in Model.AllPartitions.OfType<MPartition>())\n{\n    // Iterate through each combination of ServerString, ClusterString and CatalogString\n    foreach (string server in ServerStrings)\n    {\n        foreach (string cluster in ClusterStrings)\n        {\n            foreach ( string catalog in CatalogStrings)\n            {\n                // Perform the replacement\n                artifact.Expression = artifact.Expression.Replace(slash + server + slash, ServerParameter);\n                artifact.Expression = artifact.Expression.Replace(slash + cluster + slash, ClusterParameter);\n                artifact.Expression = artifact.Expression.Replace(slash + catalog + slash, CatalogParameter);\n            }\n        }\n    }\n}",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 92,
      "Name": "Systemforvaltning\\Catalog\\Shift to development",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der ændrer Catalog to development og toføjer _sandbox\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    03-10-2024        aols0228    Frigivelse af makro\n*/\n\nusing System.Text.RegularExpressions;\nusing System.Collections.Generic;\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\n// Define the key, Environment suffix, and description dictionary for production and development\nvar key = \"Catalog\";\nvar Environment = \"_sandbox\";\nvar DescriptionDict = new Dictionary<bool, string>\n{\n    { true, \"production\" },\n    { false, \"development\" }\n};\n\n// Define whether we are shifting to production (true) or development (false)\nbool ShiftEnvironment = false; // True shifts to production and removes Environment; False shifts to development and adds Environment\n\n// Create the expression info and set the key and initial value\nvar Expression = new ExpressionInfo\n{\n    Key = key,\n    Value = Model.Expressions[key].Expression  // Dynamically read the current value based on the key\n};\n\n// Create a variable to store the result of the regex match\nRegex regex = new Regex(\"\\\"([^\\\"]*)\\\"\");\nvar match = regex.Match(Expression.Value);  // Match the first quoted value\n\nif (match.Success)\n{\n    // Extract the first quoted value\n    var extractedValue = match.Groups[1].Value;\n\n    // Check if extractedValue is empty and run the macro if it is\n    if (string.IsNullOrEmpty(extractedValue))\n    {\n        Macro(@\"Byg og valider model\\Change catalog\");\n\n        // After the macro runs, retrieve the updated expression value again\n        Expression.Value = Model.Expressions[key].Expression;\n\n        // Re-run the regex match on the updated value\n        match = regex.Match(Expression.Value);\n\n        // If no new value is found, exit the process\n        if (!match.Success)\n        {\n            Info(\"No valid value found after running the macro.\");\n            return;\n        }\n\n        extractedValue = match.Groups[1].Value;  // Set to the new value extracted after the macro\n    }\n\n    // Check if we are shifting to production or development and modify the value accordingly\n    if (ShiftEnvironment)\n    {\n        // If shifting to production, remove the Environment suffix if it exists\n        if (extractedValue.EndsWith(Environment))\n        {\n            extractedValue = extractedValue.Substring(0, extractedValue.Length - Environment.Length);\n        }\n    }\n    else\n    {\n        // If shifting to development, add the Environment suffix if it does not exist\n        if (!extractedValue.EndsWith(Environment))\n        {\n            extractedValue += Environment;\n        }\n    }\n\n    // Set the expression description based on the ShiftEnvironment value\n    Expression.Description = $\"{DescriptionDict[ShiftEnvironment]} {key.ToLower()}\";\n\n    // Update the expression with the modified value\n    Model.Expressions[Expression.Key].Expression =\n        $@\"// {Expression.Description}\n\"\"{extractedValue}\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n}\nelse\n{\n    Info(\"No quoted string found in the expression.\");\n}\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 93,
      "Name": "Systemforvaltning\\Catalog\\Shift to production",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der ændrer Catalog to production og Remove _sandbox\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    03-10-2024        aols0228    Frigivelse af makro\n*/\n\n\nusing System.Text.RegularExpressions;\nusing System.Collections.Generic;\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\n// Define the key, Environment suffix, and description dictionary for production and development\nvar key = \"Catalog\";\nvar Environment = \"_sandbox\";\nvar DescriptionDict = new Dictionary<bool, string>\n{\n    { true, \"production\" },\n    { false, \"development\" }\n};\n\n// Define whether we are shifting to production (true) or development (false)\nbool ShiftEnvironment = true; // True shifts to production and removes Environment; False shifts to development and adds Environment\n\n// Create the expression info and set the key and initial value\nvar Expression = new ExpressionInfo\n{\n    Key = key,\n    Value = Model.Expressions[key].Expression  // Dynamically read the current value based on the key\n};\n\n// Create a variable to store the result of the regex match\nRegex regex = new Regex(\"\\\"([^\\\"]*)\\\"\");\nvar match = regex.Match(Expression.Value);  // Match the first quoted value\n\nif (match.Success)\n{\n    // Extract the first quoted value\n    var extractedValue = match.Groups[1].Value;\n\n    // Check if extractedValue is empty and run the macro if it is\n    if (string.IsNullOrEmpty(extractedValue))\n    {\n        Macro(@\"Byg og valider model\\Change catalog\");\n\n        // After the macro runs, retrieve the updated expression value again\n        Expression.Value = Model.Expressions[key].Expression;\n\n        // Re-run the regex match on the updated value\n        match = regex.Match(Expression.Value);\n\n        // If no new value is found, exit the process\n        if (!match.Success)\n        {\n            Info(\"No valid value found after running the macro.\");\n            return;\n        }\n\n        extractedValue = match.Groups[1].Value;  // Set to the new value extracted after the macro\n    }\n\n    // Check if we are shifting to production or development and modify the value accordingly\n    if (ShiftEnvironment)\n    {\n        // If shifting to production, remove the Environment suffix if it exists\n        if (extractedValue.EndsWith(Environment))\n        {\n            extractedValue = extractedValue.Substring(0, extractedValue.Length - Environment.Length);\n        }\n    }\n    else\n    {\n        // If shifting to development, add the Environment suffix if it does not exist\n        if (!extractedValue.EndsWith(Environment))\n        {\n            extractedValue += Environment;\n        }\n    }\n\n    // Set the expression description based on the ShiftEnvironment value\n    Expression.Description = $\"{DescriptionDict[ShiftEnvironment]} {key.ToLower()}\";\n\n    // Update the expression with the modified value\n    Model.Expressions[Expression.Key].Expression =\n        $@\"// {Expression.Description}\n\"\"{extractedValue}\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n}\nelse\n{\n    Info(\"No quoted string found in the expression.\");\n}\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 94,
      "Name": "Systemforvaltning\\Cluster\\fso",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\n\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Cluster\",  \n    Value = \"/sql/\", \n    Description = \"Formål 1 development (standard)\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 95,
      "Name": "Systemforvaltning\\Cluster\\fso",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\n\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Cluster\",  \n    Value = \"/sql/\", \n    Description = \"Formål 2 development\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 96,
      "Name": "Systemforvaltning\\Cluster\\fso",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\n\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Cluster\",  \n    Value = \"/sql/\", \n    Description = \"Formål 3 development\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 97,
      "Name": "Systemforvaltning\\Cluster\\fso",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\n\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Cluster\",  \n    Value = \"/sql/\", \n    Description = \"Undervisning\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 98,
      "Name": "Systemforvaltning\\Cluster\\fso",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer cluster to fm1 productionscluster\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Cluster\",  \n    Value = \"/sql/\", \n    Description = \"Formål 1 production (standard)\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 99,
      "Name": "Systemforvaltning\\Cluster\\fso",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer cluster to fm2 productionscluster\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Cluster\",  \n    Value = \"sql/\", \n    Description = \"Formål 2 production\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 100,
      "Name": "Systemforvaltning\\Cluster\\fso",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer cluster to fm3 productionscluster\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Cluster\",  \n    Value = \"/sql/\", \n    Description = \"Formål 3 production\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 101,
      "Name": "Systemforvaltning\\Partition\\Vis alle",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der slår alle partitioner op og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    01-10-2024        aols0228    Frigivelse af makro\n1.1    01-10-2024        aols0228    toføjelse af nummerering af partitioner\n1.2    01-10-2024        aols0228    toføjelse af tjek for første element\n1.3    02-10-2024        aols0228    Gjort første element tjek uafhængig, så trinvise partitioner også vises\n*/\n\n// This script iterates through all tables in the model and outputs each table's name and its partitions, including their expressions, in a single Info() call.\n\nvar output = \"\"; // Initialize a string to hold the output for all tables\nstring targetSubstring = \"Schema{[Name=\"; // Define the target substring as a variable\nstring quote = \"\\\"\"; // Define the quote character as a variable\n\nforeach (var table in Model.Tables)\n{\n    // Append the table name to the output string\n    output += $\"---------------------------------\\n\";\n\n    // Check if the table has partitions\n    if (table.Partitions.Count > 0)\n    {     \n        foreach (var partition in table.Partitions)\n        {\n            // Append the partition details with numbering\n            output += $\"Table/Partition: {table.Name}/{partition.Name}\\n\";\n\n            // Extract the expression and handle null\n            string expression = partition.Expression ?? string.Empty;\n\n            if (expression.Contains(targetSubstring))\n            {\n                // Extract the substring after the target and find the first quoted item\n                int startIndex = expression.IndexOf(targetSubstring) + targetSubstring.Length;\n\n                // Ensure startIndex is valid before extracting the subExpression\n                if (startIndex >= targetSubstring.Length && startIndex < expression.Length)\n                {\n                    string subExpression = expression.Substring(startIndex).Trim();\n                    var match = System.Text.RegularExpressions.Regex.Match(subExpression, $\"{quote}([^\\\"']*){quote}\");\n                    output += $\"Databricks: {(match.Success && match.Groups.Count > 1 ? match.Groups[1].Value : \"(no valid item found)\")}\\n\";\n                }\n            }\n\n            output += $\"{partition.ObjectTypeName}\\n\";\n            output += $\"{partition.Expression}\"; // Move Expression to a new line\n        }\n    }\n    else\n    {\n        output += \"\\tNo partitions found for this table.\\n\";\n    }\n\n    output += \"\\n\"; // Add an empty line for better readability between tables\n}\n\n// Output all the accumulated information for all tables in one Info() call\nInfo(output);\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 102,
      "Name": "Systemforvaltning\\Server\\production",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der opdaterer eksisterende parametre to sandbox-miljøet\n    1. It creates a dictionary with key/value pairs of typestring/string with the M parameters you wish to update\n    2. If the M parameters do not preexist the script fails\n    3. If they exist it fetches the M parameters with the same name as in the dictionary\n    3. It then insert the new parameters value for sandbox environment\n\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n1.1    19-09-2024        aols0228    Brug af custom class, ExpressionInfo, for at toføje beskrivelse\n*/\n\npublic class ExpressionInfo\n{\n    public string Key { get; set; }\n    public string Value { get; set; }\n    public string Description { get; set; }\n}\n\nvar Expression = new ExpressionInfo  // Add the strings directly below\n{ \n    Key = \"Server\",  \n    Value = \"adb-\", \n    Description = \"production\" \n};\n\nModel.Expressions[Expression.Key].Expression = \n    $@\"// {Expression.Description} {Expression.Key.ToLower()}\n\"\"\" + Expression.Value + @\"\"\"\nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 103,
      "Name": "Systemforvaltning\\Shared Expression\\Vis alle",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der slår alle shared expressions op og viser brugeren dens udtryk\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    02-10-2024        aols0228    Frigivelse af makro\n*/\n\n// This script iterates through all shared expressions in the model and outputs their names and corresponding expressions in a single Info() call.\n\nvar output = \"\"; // Initialize a string to hold the output for all expressions\n\n// Sort the expressions alphabetically by their names\nvar sortedExpressions = Model.Expressions.OrderBy(expression => expression.Name);\n\nforeach (var expression in sortedExpressions)\n{\n    output += $\"---------------------------------\\n\"; // Separator between expressions\n    output += $\"{expression.Name}\\n\"; // Append the expression name\n    output += $\"{expression.Expression}\\n\"; // Append the expression content\n}\n\n// Output all accumulated information in a single Info() call\nInfo(output);\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 104,
      "Name": "Systemforvaltning\\---------Drift---------",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228\nLink to source: Favoritmakro\nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log: (udShift denne med dine noter)\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    19-06-2024        aols0228    Frigivelse af makro\n*/\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 105,
      "Name": "Systemforvaltning\\Headerskabelon",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der klargør partitionerne efter de er blevet importeret fra databricks\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    dd-mm-yyyy        bruger-id   Frigivelse af makro\n*/\n\n",
      "Tooltip": "",
      "ValidContexts": "Model"
    },
    {
      "Id": 106,
      "Name": "Systemforvaltning\\Inputboks",
      "Enabled": "true",
      "Execute": "/*\nForfatter: Andreas Nordgaard aols0228 og ChatGPT\nLink to source: \nBeskrivelse: Makro, der viser en inputboksndstoler schema-parametret\nChange Log:\n---------------------------------------------------------------\nVer. | Dato DD-MM-YYYY | Forfatter | Beskrivelse\n1.0    dd-MM-yyyy        bruger-id   Frigivelse af makro\n*/\n\nusing System;\nusing System.Windows.Forms;\n\nclass Program\n{\n    static void Main()\n    {\n        string userInput = Prompt.ShowDialog(\"Enter Value\", \"Input Box\");\n\n        if (userInput != null)\n        {\n            MessageBox.Show($\"You entered: {userInput}\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n        else\n        {\n            MessageBox.Show(\"Operation canceled.\", \"Result\", MessageBoxButtons.OK, MessageBoxIcon.Information);\n        }\n    }\n}\n\npublic class Prompt\n{\n    public static string ShowDialog(string text, string caption)\n    {\n        // Create the form\n        Form prompt = new Form();\n        prompt.Width = 500;\n        prompt.Height = 220; // Set the height to ensure visibility\n        prompt.Text = caption;\n        prompt.FormBorderStyle = FormBorderStyle.FixedDialog;\n        prompt.StartPosition = FormStartPosition.CenterScreen; // Center on screen initially\n        prompt.MinimizeBox = false;\n        prompt.MaximizeBox = false;\n        prompt.TopMost = true; // Ensure the form stays on top\n\n        // Bring the form to front and activate it\n        prompt.Shown += (sender, e) =>\n        {\n            prompt.BringToFront();\n            prompt.Activate();\n        };\n\n        // Create a label\n        Label textLabel = new Label()\n        {\n            Left = 50,\n            Top = 20,\n            Width = 400,\n            Text = text\n        };\n\n        // Create a text box\n        TextBox textBox = new TextBox()\n        {\n            Left = 50,\n            Top = 50,\n            Width = 400,\n            Height = 30 // Set height for better visibility\n        };\n\n        // Create the OK button\n        Button confirmation = new Button()\n        {\n            Text = \"OK\",\n            Left = 230,  // Positioned before \"Annuller\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Create the \"Annuller\" button\n        Button cancelation = new Button()\n        {\n            Text = \"Annuller\",\n            Left = 350, // Positioned after \"OK\"\n            Width = 100,\n            Height = 40, // Ensure height is sufficient\n            Top = 100 // Adjust position to avoid clipping\n        };\n\n        // Button click events\n        confirmation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.OK;\n            prompt.Close();\n        };\n\n        cancelation.Click += (sender, e) =>\n        {\n            prompt.DialogResult = DialogResult.Cancel;\n            prompt.Close();\n        };\n\n        // Add controls to the form\n        prompt.Controls.Add(textBox);\n        prompt.Controls.Add(confirmation);\n        prompt.Controls.Add(cancelation);\n        prompt.Controls.Add(textLabel);\n\n        // Set the default button\n        prompt.AcceptButton = confirmation;\n\n        // Show the dialog and return the result\n        return prompt.ShowDialog() == DialogResult.OK ? textBox.Text : null;\n    }\n}\n\nstring expressionName = \"\"; // This is the variable for the expression name\n\nstring userInput = Prompt.ShowDialog(\"Indtast navn på \" + expressionName.ToLower(), \"Input Box\");\n\nif (userInput != null)\n{\n\n\n//string userInput = \"yourUserInput\"; // Replace with the following with actual user input\n\n// Define the common expression text\nstring expressionText = \n@\"\"\"\" + userInput.ToLower() + @\"\"\" \nmeta [\n    IsParameterQuery         = true,\n    IsParameterQueryRequired = true,\n    Type                     = type text\n]\";\n\ntry\n{\n    // Use userInput here...\n    Model.Expressions[expressionName].Expression = expressionText; //denne del overskriver værdien i det eksisterende Schema-parameter\n}\ncatch (Exception)\n{\n    Model.AddExpression(expressionName, expressionText); //denne del Createter et nyt Schema-parameter, hvis det ikke findes\n}\n}\n\n\nelse\n{\n    // User canceled the operation.\n}",
      "Tooltip": "",
      "ValidContexts": "Model"
    }
  ]
}